{"version":3,"file":"compomint.esm.min.js","sources":["../src/utils.ts","../src/compomint-core.ts","../src/default-template-config.ts","../src/built-in-templates.ts"],"sourcesContent":["\nconst firstElementChild = function (ele: Element | DocumentFragment): Element | null {\n  if (ele.firstElementChild) return ele.firstElementChild;\n  const children = ele.childNodes;\n  for (let i = 0, size = children.length; i < size; i++) {\n    if (children[i] instanceof Element) {\n      return children[i] as Element;\n    }\n  }\n  return null;\n};\n\nconst childNodeCount = function (ele: Element | DocumentFragment): number {\n  return (\n    ele.childElementCount ||\n    Array.prototype.filter.call(ele.childNodes, function (child: Node) {\n      return child instanceof Node;\n    }).length\n  );\n};\n\nconst childElementCount = function (ele: Element | DocumentFragment): number {\n  return (\n    ele.childElementCount ||\n    Array.prototype.filter.call(ele.childNodes, function (child: Node) {\n      return child instanceof Element;\n    }).length\n  );\n};\n\nconst cleanNode = function (node: Node): void {\n  for (let n = 0; n < node.childNodes.length; n++) {\n    const child = node.childNodes[n];\n    if (\n      child.nodeType === 8 || // Comment node\n      (child.nodeType === 3 && !/\\S/.test(child.nodeValue || '')) // Text node with only whitespace\n    ) {\n      node.removeChild(child);\n      n--; // Adjust index after removal\n    } else if (child.nodeType === 1) {\n      // Element node\n      cleanNode(child); // Recurse\n    }\n  }\n};\n\nconst domParser = new DOMParser();\nconst stringToElement = function (str: string | number): Node {\n  if (typeof str === 'number' || !isNaN(Number(str))) {\n    return document.createTextNode(String(str));\n  } else if (typeof str === 'string') {\n    try {\n      const doc = domParser.parseFromString(str, \"text/html\");\n      const body = doc.body;\n      if (body.childNodes.length === 1) {\n        return body.firstChild!;\n      } else {\n        const fragment = document.createDocumentFragment();\n        while (body.firstChild) {\n          fragment.appendChild(body.firstChild);\n        }\n        return fragment;\n      }\n    } catch (e) {\n      return document.createTextNode(str);\n    }\n  } else {\n    return document.createTextNode('');\n  }\n};\n\nexport {\n  firstElementChild,\n  childNodeCount,\n  childElementCount,\n  cleanNode,\n  stringToElement,\n};\n","/*\n * Copyright (c) 2025-present, Choi Sungho\n * Code released under the MIT license\n */\n\nimport { CompomintGlobal, ComponentScope, LazyScope, RenderingFunction, TemplateConfig, TemplateMeta, TemplateRule, Tools, TemplateElement } from \"./type\";\nimport { defaultTemplateConfig } from \"./default-template-config\";\nimport { applyBuiltInTemplates } from \"./built-in-templates\"\nimport {\n  firstElementChild,\n  childElementCount,\n  cleanNode,\n} from \"./utils\";\n\n\n// Polyfill for Object.assign\nif (typeof Object.assign != \"function\") {\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target: any, ...params: any[]) {\n      if (target == null) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n      let to = Object(target);\n      for (let index = 0, length = params.length; index < length; index++) {\n        let nextSource = params[index];\n        if (nextSource != null) {\n          for (let nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true,\n  });\n}\n\n// Polyfill for ChildNode.remove\n(function (arr: any[]) {\n  arr.forEach(function (item) {\n    if (!item || item.hasOwnProperty(\"remove\")) {\n      return;\n    }\n    Object.defineProperty(item, \"remove\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode !== null) {\n          this.parentNode.removeChild(this);\n        }\n      },\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\n// Polyfill for Node.isConnected\n(function (supported: boolean) {\n  if (supported) return;\n  Object.defineProperty(window.Node.prototype, \"isConnected\", {\n    get: function (): boolean {\n      return document.body.contains(this);\n    },\n  });\n})(\"isConnected\" in window.Node.prototype);\n\nconst compomint = ({} as CompomintGlobal);\nconst tmpl = {} as Record<string, any>;\nconst tools = (compomint.tools = compomint.tools || {} as Tools);\nconst configs = (compomint.configs = Object.assign({ printExecTime: false, debug: false, throwError: true }, compomint.configs));\nconst cachedTmpl = (compomint.tmplCache = compomint.tmplCache || new Map<string, TemplateMeta>());\nif (!cachedTmpl.has(\"anonymous\")) {\n  cachedTmpl.set(\"anonymous\", { elements: new Set() } as TemplateMeta); // Cast to TemplateMeta\n}\nconst isSupportTemplateTag = \"content\" in document.createElement(\"template\");\n\nconst noMatch = /(.)^/;\nconst escapes: Record<string, string> = {\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\",\n  \"\\r\": \"\\\\r\",\n  \"\\n\": \"\\\\n\",\n  \"\\t\": \"\\\\t\",\n  \"\\u2028\": \"\\u2028\",\n  \"\\u2029\": \"\\u2029\",\n  \"><\": \"><\",\n  \"<\": \"<\",\n  \">\": \">\",\n};\n\nconst escaper = /\\>( |\\n)+\\<|\\>( |\\n)+|( |\\n)+\\<|\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n// set default template config\ncompomint.templateConfig = defaultTemplateConfig(configs, compomint);\n\nconst escapeHtml = (function () {\n  const escapeMap: Record<string, string> = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\", // Use HTML entity for single quote\n    \"`\": \"&#x60;\", // Use HTML entity for backtick\n    //\"\\n\": \"&#10;\", // Keep newline escaping if needed, otherwise remove\n  };\n\n  const unescapeMap: Record<string, string> = Object.fromEntries(Object.entries(escapeMap).map(([key, value]) => [value, key]));\n\n  const createEscaper = function (map: Record<string, string>): (str: string) => string {\n    const escaper = function (match: string): string {\n      return map[match];\n    };\n    const source = `(?:${Object.keys(map).join(\"|\").replace(/\\\\/g, '\\\\\\\\')})`; // Escape backslashes if any keys have them\n    const testRegexp = RegExp(source);\n    const replaceRegexp = RegExp(source, \"g\");\n    return function (string: string | null | undefined): string {\n      string = string == null ? \"\" : `${string}`;\n      return testRegexp.test(string)\n        ? string.replace(replaceRegexp, escaper)\n        : string;\n    };\n  };\n\n  return {\n    escape: createEscaper(escapeMap),\n    unescape: createEscaper(unescapeMap),\n  };\n})();\ntools.escapeHtml = escapeHtml;\n\nconst matcherFunc = function (templateRules: Record<string, TemplateRule>): {\n  templateRules: Record<string, TemplateRule>;\n  pattern: RegExp;\n  exec: ((...args: any[]) => string)[];\n  lazyExecKeys: string[];\n  lazyExec: Record<string, (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element) => void>;\n  lazyScopeSeed: string;\n} {\n  const patternArray: string[] = [];\n  const execArray: ((...args: any[]) => string)[] = [];\n  const lazyExecMap: Record<string, (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element) => void> = {};\n  const lazyScopeSeed: Record<string, any[]> = {};\n\n  Object.keys(templateRules).forEach(function (key) {\n    const templateRule = templateRules[key] as TemplateRule | any; // Type assertion\n    if (templateRule && typeof templateRule === 'object' && templateRule.pattern instanceof RegExp && typeof templateRule.exec === 'function') {\n      patternArray.push((templateRule.pattern || noMatch).source);\n      execArray.push(templateRule.exec);\n    }\n    if (templateRule && typeof templateRule === 'object' && typeof templateRule.lazyExec === 'function') {\n      const arrayKey = `${key}Array`;\n      lazyExecMap[arrayKey] = templateRule.lazyExec;\n      lazyScopeSeed[arrayKey] = [];\n    }\n  });\n  return {\n    templateRules: templateRules,\n    pattern: new RegExp(patternArray.join(\"|\"), \"g\"),\n    exec: execArray,\n    lazyExecKeys: Object.keys(lazyScopeSeed),\n    lazyExec: lazyExecMap,\n    lazyScopeSeed: JSON.stringify(lazyScopeSeed),\n  };\n};\n\nconst escapeFunc = function (match: string): string {\n  return escapes[match] || escapes[match.replace(/[ \\n]/g, \"\")] || \"\";\n};\n\nconst defaultMatcher = matcherFunc(compomint.templateConfig.rules);\n\nconst templateParser = function (tmplId: string, text: string, matcher: ReturnType<typeof matcherFunc>): string {\n  if (configs.printExecTime) console.time(`tmpl: ${tmplId}`);\n\n  let index = 0;\n  let source = \"\";\n\n  text.replace(matcher.pattern, function (...params: any[]): string {\n    const match: string = params[0];\n    const offset: number = params[params.length - 2];\n\n    source += text.slice(index, offset).replace(escaper, escapeFunc);\n\n    let selectedMatchContent: string | undefined;\n    let matchIndex: number | null = null;\n\n    params.slice(1, -2).some(function (value: any, idx: number) {\n      if (value !== undefined) {\n        selectedMatchContent = value;\n        matchIndex = idx;\n        return true;\n      }\n      return false;\n    });\n\n    if (selectedMatchContent !== undefined && matchIndex !== null) {\n      try {\n        source += matcher.exec[matchIndex].call(matcher.templateRules, selectedMatchContent, tmplId);\n      } catch (e: any) {\n        console.error(`Error executing template rule index ${matchIndex} for match \"${selectedMatchContent}\" in template \"${tmplId}\":`, e);\n        if (configs.throwError) throw e;\n        source += '';\n      }\n    } else {\n      source += match.replace(escaper, escapeFunc);\n    }\n\n    index = offset + match.length;\n    return match;\n  });\n\n  source += text.slice(index).replace(escaper, escapeFunc);\n\n  if (configs.printExecTime) console.timeEnd(`tmpl: ${tmplId}`);\n  return source;\n};\n\n\nconst templateBuilder = (compomint.template = function compomint_templateBuilder(\n  tmplId: string,\n  templateText: string,\n  customTemplateConfig?: Partial<TemplateConfig>\n): RenderingFunction {\n  let templateConfig = compomint.templateConfig;\n  let matcher = defaultMatcher;\n\n  if (customTemplateConfig) {\n    templateConfig = Object.assign({}, compomint.templateConfig, customTemplateConfig);\n    matcher = matcherFunc(templateConfig.rules);\n  }\n\n  const source = `\n/* tmplId: ${tmplId} */\n//# sourceURL=http://tmpl//${tmplId.split(\"-\").join(\"//\")}.js\nif (__debugger) {\ndebugger;\n}\nlet __p='';\n__p+='${templateParser(tmplId, templateText, matcher)}';\nreturn __p;`;\n\n  let sourceGenFunc: Function | null = null;\n\n  try {\n    sourceGenFunc = new Function(\n      templateConfig.keys.dataKeyName as string,\n      templateConfig.keys.statusKeyName as string,\n      templateConfig.keys.componentKeyName as string,\n      templateConfig.keys.i18nKeyName as string,\n      \"compomint\",\n      \"tmpl\",\n      \"__lazyScope\",\n      \"__debugger\",\n      source\n    );\n  } catch (e: any) {\n    if (configs.throwError) {\n      console.error(`Template compilation error in \"${tmplId}\", ${e.name}: ${e.message}`);\n      try { // Attempt re-run for potential browser debugging\n        new Function(\n          templateConfig.keys.dataKeyName as string, templateConfig.keys.statusKeyName as string, templateConfig.keys.componentKeyName as string,\n          templateConfig.keys.i18nKeyName as string, \"compomint\", \"tmpl\", \"__lazyScope\", \"__debugger\", source\n        );\n      } catch { /* Ignore re-run error */ }\n      throw e;\n    } else {\n      return (() => ({} as ComponentScope)); // Return a dummy function if not throwing\n    }\n  }\n\n  const renderingFunc: RenderingFunction = function compomint_renderingFuncBuilder(...params): ComponentScope {\n    let data: Record<string, any>;\n    let wrapperElement: Element | undefined;\n    let callback: ((component: ComponentScope) => void) | undefined;\n    let baseComponent: Partial<ComponentScope> | undefined;\n\n    // Argument parsing logic\n    const firstArg = params[0];\n    if (firstArg && typeof firstArg === 'object' && (firstArg.$wrapperElement || firstArg.$callback || firstArg.$baseComponent)) {\n      data = { ...firstArg }; // Clone data object\n      wrapperElement = data.$wrapperElement; delete data.$wrapperElement;\n      callback = data.$callback; delete data.$callback;\n      baseComponent = data.$baseComponent; delete data.$baseComponent;\n    } else {\n      data = firstArg;\n      if (typeof params[1] === 'function') {\n        wrapperElement = undefined;\n        callback = params[1] as ((component: ComponentScope) => void);\n        baseComponent = params[2];\n      } else {\n        wrapperElement = params[1];\n        callback = params[2];\n        baseComponent = params[3];\n      }\n    }\n\n\n    const dataKeyName = templateConfig.keys.dataKeyName as string;\n    const statusKeyName = templateConfig.keys.statusKeyName as string;\n    const lazyScope: LazyScope = JSON.parse(matcher.lazyScopeSeed);\n\n    const component: ComponentScope = Object.assign(baseComponent || {}, {\n      tmplId: tmplId,\n      element: null as any, // Initialize element\n      status: (baseComponent && baseComponent.status) || {}, // Ensure status exists\n      replace: function (newComponent: ComponentScope | Element): void {\n        const self = this as ComponentScope;\n        if (!self.element || !(self.element instanceof Node) || !self.element.parentElement) {\n          if (configs.debug) console.warn(`Cannot replace template \"${tmplId}\": element not in DOM.`);\n          return;\n        }\n        self.element.parentElement.replaceChild(\n          (newComponent as ComponentScope).element || newComponent as Element,\n          self.element as Node\n        );\n      },\n      remove: function (spacer: boolean = false): Element | TemplateElement | Comment | DocumentFragment {\n        const self = this as ComponentScope;\n        if (self.beforeRemove) { try { self.beforeRemove(); } catch (e) { console.error(\"Error in beforeRemove:\", e); } }\n\n        const parent = (self.element instanceof Node) ? self.element.parentElement : null;\n        let removedElement: Element | TemplateElement | Comment | DocumentFragment = self.element; // Store reference\n\n        if (parent) {\n          if (spacer) {\n            const dumy = document.createElement(\"template\");\n            parent.replaceChild(dumy, self.element as Node);\n            self.element = dumy; // Update scope's element reference\n          } else {\n            parent.removeChild(self.element as Node);\n          }\n        } else if (configs.debug) {\n          console.warn(`Cannot remove template \"${tmplId}\": element not in DOM.`);\n        }\n\n        if (self.afterRemove) { try { self.afterRemove(); } catch (e) { console.error(\"Error in afterRemove:\", e); } }\n        return removedElement;\n      },\n      appendTo: function (parentElement: Element): ComponentScope {\n        const self = this as ComponentScope;\n        if (self.beforeAppendTo) { try { self.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n\n        if (parentElement && self.element instanceof Node) {\n          parentElement.appendChild(self.element);\n        } else if (configs.debug) {\n          console.warn(`Cannot append template \"${tmplId}\": parentElement or scope.element is missing or not a Node.`);\n        }\n\n        if (self.afterAppendTo) {\n          setTimeout(() => { try { self.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0);\n        }\n        return self;\n      },\n      release: function (): void { /* Implementation below */ },\n      render: function (newData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n      refresh: function (reflashData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n      reflash: function (reflashData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n    } as ComponentScope); // Cast to ComponentScope\n\n    if (!component._id) {\n      component._id = tools.genId(tmplId);\n    }\n    component[dataKeyName] = data;\n    if (component[statusKeyName] == undefined) {\n      component[statusKeyName] = {};\n    }\n\n    const hasParent = wrapperElement instanceof Element;\n    const temp = document.createElement(\"template\");\n    let returnTarget: Node | null = null;\n\n    if (configs.printExecTime) console.time(`render: ${tmplId}`);\n\n    let renderedHTML: string | null = null;\n    try {\n      renderedHTML = !data\n        ? `<template data-co-empty-template=\"${tmplId}\"></template>`\n        : sourceGenFunc!.call( // Use non-null assertion\n          wrapperElement || null,\n          data,\n          component[statusKeyName],\n          component,\n          compomint.i18n[tmplId],\n          compomint,\n          tmpl,\n          lazyScope,\n          configs.debug // Pass debug flag for __debugger\n        );\n    } catch (e: any) {\n      if (configs.throwError) {\n        console.error(`Runtime error during render of \"${tmplId}\":`, e.message);\n        console.log(\"--- Data ---\", data, \"------------\");\n        try { // Attempt re-run with debugger\n          sourceGenFunc!.call(wrapperElement || null, data, component[statusKeyName], component, compomint.i18n[tmplId], lazyScope, true);\n        } catch { /* Ignore */ }\n        throw e;\n      } else {\n        console.warn(`Render failed for \"${tmplId}\". Returning scope with comment node.`);\n        component.element = document.createComment(`Render Error: ${tmplId}`) as any;\n        return component;\n      }\n    }\n    if (configs.printExecTime) console.timeEnd(`render: ${tmplId}`);\n\n    temp.innerHTML = renderedHTML!;\n    let docFragment: DocumentFragment | Element | TemplateElement = temp.content || temp;\n\n    if ((docFragment as any).tagName == \"TEMPLATE\" && !(temp as any).content) { // Check for IE11 case\n      const children = Array.from(docFragment.childNodes);\n      docFragment = document.createDocumentFragment();\n      children.forEach(child => docFragment.appendChild(child));\n    }\n\n    const lazyExec = matcher.lazyExec;\n    if (data) {\n      matcher.lazyExecKeys.forEach(function (key) {\n\n        if (lazyScope[key] && lazyScope[key].length > 0) {\n          try {\n            lazyExec[key].call(templateConfig.rules[key.slice(0, -5)], data, lazyScope, component, docFragment as DocumentFragment | Element); // Cast needed\n          } catch (e: any) {\n            if (configs.throwError) {\n              console.error(`Error during lazy execution of \"${key}\" for template \"${tmplId}\":`, e);\n              throw e;\n            }\n          }\n        }\n      });\n    }\n\n    if (hasParent && wrapperElement) {\n      while (wrapperElement.firstChild) {\n        wrapperElement.removeChild(wrapperElement.firstChild);\n      }\n      component.wrapperElement = wrapperElement;\n    }\n\n    // Handle shadow DOM creation\n    const shadowStyle = (docFragment as any).querySelector ? (docFragment as any).querySelector(\"style\") : null;\n    if (shadowStyle && (docFragment as any).querySelector) { // Check if querySelector exists\n      const host = document.createElement(tmplId); // Use tmplId as host tag name\n      try {\n        const shadow = host.attachShadow({ mode: \"open\" });\n        while (docFragment.firstChild) {\n          shadow.appendChild(docFragment.firstChild);\n        }\n        docFragment = host; // Replace fragment with the host element\n      } catch (e) {\n        console.error(`Failed to attach shadow DOM for template \"${tmplId}\":`, e);\n        // Proceed without shadow DOM if attachShadow fails\n      }\n    }\n\n\n    if (docFragment.firstChild && docFragment.firstChild.nodeType == 8) {\n      returnTarget = docFragment.firstChild;\n    } else if (childElementCount(docFragment) == 1) {\n      returnTarget = firstElementChild(docFragment);\n      if (hasParent && wrapperElement && returnTarget) {\n        if (component.beforeAppendTo) { try { component.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n        wrapperElement.appendChild(returnTarget);\n        if (component.afterAppendTo) { setTimeout(() => { try { component.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0); }\n      }\n    } else {\n      if (hasParent && wrapperElement) {\n        if (component.beforeAppendTo) { try { component.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n        wrapperElement.appendChild(docFragment);\n        if (component.afterAppendTo) { setTimeout(() => { try { component.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0); }\n        returnTarget = wrapperElement;\n      } else {\n        returnTarget = docFragment;\n      }\n    }\n\n    if (data && data.$props && returnTarget instanceof Element) {\n      for (const prop in data.$props) {\n        try {\n          const value = data.$props[prop];\n          if (prop.startsWith('data-')) {\n            const camelCased = prop.substring(5).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n            (returnTarget as HTMLElement).dataset[camelCased] = String(value);\n          } else if (prop in returnTarget) {\n            (returnTarget as any)[prop] = value;\n          } else {\n            returnTarget.setAttribute(prop, String(value));\n          }\n        } catch (e: any) {\n          console.error(`Error applying prop \"${prop}\" to element in template \"${tmplId}\":`, e);\n        }\n      }\n    }\n\n    if (returnTarget instanceof Node && returnTarget.normalize) {\n      returnTarget.normalize();\n    }\n    if (returnTarget instanceof Node) {\n      cleanNode(returnTarget);\n    }\n    component.element = returnTarget as HTMLElement | TemplateElement; // Assign final element/fragment\n\n    if (tools.liveReloadSupport) {\n      try { tools.liveReloadSupport(component); } catch (e) { console.error(\"Error in liveReloadSupport:\", e); }\n    }\n\n    if (callback) {\n      try {\n        callback.call(wrapperElement || null, component);\n      } catch (e: any) {\n        console.error(`Error in template callback for \"${tmplId}\":`, e);\n        if (configs.throwError) throw e;\n      }\n    }\n\n    // Define Component Methods (Render/Refresh/Release)\n    component.release = function (): void {\n      const self = this as ComponentScope;\n      const props = Object.getOwnPropertyNames(self);\n      const keepProps = [statusKeyName, '_id'];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (typeof (self as any)[prop] !== 'function' && !keepProps.includes(prop)) {\n          delete (self as any)[prop];\n        }\n      }\n    };\n\n    component.render = function (newData: Record<string, any>): ComponentScope {\n      const currentComponent = this as ComponentScope;\n      const targetElement = currentComponent.element;\n      const parent = (targetElement instanceof Node) ? targetElement.parentElement : null;\n      const wrapper = currentComponent.wrapperElement;\n      const tmplFunc = compomint.tmpl(currentComponent.tmplId);\n\n      if (!tmplFunc) {\n        console.error(`Cannot re-render: Template function for \"${currentComponent.tmplId}\" not found.`);\n        return currentComponent;\n      }\n\n      const hooks = {\n        beforeAppendTo: currentComponent.beforeAppendTo, afterAppendTo: currentComponent.afterAppendTo,\n        beforeRemove: currentComponent.beforeRemove, afterRemove: currentComponent.afterRemove,\n        beforeRefresh: currentComponent.beforeRefresh, afterRefresh: currentComponent.afterRefresh\n      };\n\n      if (currentComponent.beforeRemove) { try { currentComponent.beforeRemove(); } catch (e) { console.error(\"Error in beforeRemove during render:\", e); } }\n\n      let newComponent: ComponentScope;\n      if (wrapper) {\n        newComponent = tmplFunc(newData, wrapper, undefined, currentComponent); // Reuse scope object\n      } else if (parent && targetElement instanceof Node) {\n        newComponent = tmplFunc(newData, undefined, undefined, currentComponent); // Reuse scope object\n        if (newComponent.element instanceof Node) {\n          if (newComponent.beforeAppendTo) { try { newComponent.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo during render:\", e); } }\n          parent.replaceChild(newComponent.element, targetElement);\n          if (newComponent.afterAppendTo) { setTimeout(() => { try { newComponent.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo during render:\", e); } }, 0); }\n        } else if (configs.debug) {\n          console.warn(`Re-render of \"${currentComponent.tmplId}\" resulted in no element or target was missing.`);\n        }\n      } else {\n        // No parent, just create new scope (likely detached)\n        newComponent = tmplFunc(newData, undefined, undefined, currentComponent);\n      }\n\n      if (currentComponent.afterRemove) { try { currentComponent.afterRemove(); } catch (e) { console.error(\"Error in afterRemove during render:\", e); } }\n\n      Object.assign(newComponent, hooks); // Restore hooks\n      return newComponent;\n    };\n\n    component.refresh = function (reflashData: Record<string, any>): ComponentScope {\n      const currentComponent = this as ComponentScope;\n      const currentData = currentComponent[dataKeyName];\n      if (currentComponent.beforeRefresh) { try { currentComponent.beforeRefresh(); } catch (e) { console.error(\"Error in beforeRefresh:\", e); } }\n      const newData = Object.assign({}, currentData || {}, reflashData);\n      const newComponent = currentComponent.render(newData);\n      if (currentComponent.afterRefresh) { try { currentComponent.afterRefresh(); } catch (e) { console.error(\"Error in afterRefresh:\", e); } }\n      return newComponent;\n    };\n\n    component.reflash = component.refresh;\n\n    return component;\n  }; // End of renderingFunc definition\n\n  Object.defineProperty(renderingFunc, \"name\", { value: `render_${tmplId}`, writable: false });\n\n  if (tmplId) {\n    const tmplMeta: TemplateMeta = configs.debug ? {\n      renderingFunc: renderingFunc,\n      source: escapeHtml.escape(`function ${tmplId}_source (${templateConfig.keys.dataKeyName}, ${templateConfig.keys.statusKeyName}, ${templateConfig.keys.componentKeyName}, ${templateConfig.keys.i18nKeyName}, __lazyScope, __debugger) {\\n${source}\\n}`),\n      templateText: escapeHtml.escape(templateText),\n    } : {\n      renderingFunc: renderingFunc,\n    };\n    cachedTmpl.set(tmplId, tmplMeta);\n\n    const tmplIdNames = tmplId.split(\"-\");\n    if (tmplIdNames.length > 1) {\n      const group = tmplIdNames[0];\n      let groupObj = tmpl[group];\n      if (!groupObj) {\n        tmpl[group] = groupObj = {};\n      }\n      const tmplIdSub = tmplIdNames\n        .slice(1)\n        .map((part, index) => index === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1))\n        .join('');\n      groupObj[tmplIdSub] = tmplMeta.renderingFunc;\n    }\n  }\n  return renderingFunc;\n}); // End of templateBuilder\n\ncompomint.remapTmpl = function (json: Record<string, string>): void {\n  Object.keys(json).forEach(function (oldKey: string) {\n    const newKey = json[oldKey];\n    const meta = cachedTmpl.get(oldKey);\n    if (meta) {\n      cachedTmpl.set(newKey, meta);\n      if (configs.debug) console.log(`Remapped template \"${oldKey}\" to \"${newKey}\"`);\n    } else if (configs.debug) {\n      console.warn(`Cannot remap template: Old key \"${oldKey}\" not found in cache.`);\n    }\n  });\n};\n\ncompomint.tmpl = function (tmplId: string): RenderingFunction | null {\n  const tmplMeta = cachedTmpl.get(tmplId);\n  return tmplMeta ? tmplMeta.renderingFunc : null;\n};\n\nconst safeTemplate = function (source: Element | string): Element | TemplateElement {\n  let template: TemplateElement;\n  if (source instanceof Element) {\n    if (source.tagName === 'TEMPLATE') return source as TemplateElement;\n    return source; // Assume it's a container element\n  } else if (typeof source !== 'string') {\n    if (configs.debug) console.warn(\"safeTemplate received non-string/non-element source:\", source);\n    source = '';\n  }\n\n  template = document.createElement(\"template\");\n  if (isSupportTemplateTag) {\n    const encodedSource = source.replace(\n      /<(?!template|\\/template|body|\\/body|html|\\/html|head|\\/head|style|\\/style|script|\\/script|link|\\/link|meta|\\/meta|!--)/gi,\n      \"&lt;\"\n    );\n    template.innerHTML = encodedSource;\n  } else {\n    const encodedSource = source\n      .replace(\n        /<(?!template|\\/template|body|\\/body|html|\\/html|head|\\/head|style|\\/style|script|\\/script|link|\\/link|meta|\\/meta|!--)/gi,\n        \"&lt;\"\n      )\n      .replace(/<template/g, '<script type=\"template\"')\n      .replace(/<\\/template>/g, \"</script>\");\n    template.innerHTML = encodedSource;\n  }\n  return template;\n};\n\nconst addTmpl: CompomintGlobal[\"addTmpl\"] = (compomint.addTmpl = function (tmplId, element, templateConfig) {\n  let templateText = element instanceof Element ? element.innerHTML : String(element);\n  templateText = escapeHtml.unescape(templateText.replace(/<!---|--->/gi, \"\"));\n  return templateBuilder(tmplId, templateText, templateConfig);\n});\n\nconst addTmpls: CompomintGlobal[\"addTmpls\"] = (compomint.addTmpls = function (source, removeInnerTemplate, templateConfig) {\n  if (typeof removeInnerTemplate !== \"boolean\" && templateConfig == undefined) {\n    templateConfig = removeInnerTemplate as Partial<TemplateConfig> | undefined;\n    removeInnerTemplate = false;\n  } else {\n    removeInnerTemplate = !!removeInnerTemplate;\n  }\n\n  const container = safeTemplate(source);\n  const content = (container as TemplateElement).content || container; // Use content if available\n  const tmplNodes = content.querySelectorAll<Element>(\n    'template[id], script[type=\"text/template\"][id], script[type=\"text/compomint\"][id]'\n  );\n\n  tmplNodes.forEach(node => {\n    const tmplId = node.id;\n    if (!tmplId) return;\n\n    if ((node as HTMLElement).dataset.coLoadScript !== undefined) {\n      addTmpl(tmplId, node, templateConfig)({}); // Execute immediately if data-co-load-script\n    } else {\n      addTmpl(tmplId, node, templateConfig);\n    }\n\n    if (removeInnerTemplate && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n  return container;\n});\n\nconst addTmplByUrl: CompomintGlobal[\"addTmplByUrl\"] = (compomint.addTmplByUrl = function compomint_addTmplByUrl(importData, option, callback) {\n  if (!callback && typeof option === \"function\") {\n    callback = option;\n    option = {};\n  }\n\n  const defaultOptions = {\n    loadScript: true, loadStyle: true, loadLink: true, templateConfig: undefined\n  };\n  const mergedOptions = Object.assign({}, defaultOptions, option as Record<string, any>); // Ensure option is object\n\n  const importDataParser = (obj: string | any): { url: string; option: Record<string, any> } | null => {\n    if (typeof obj === \"string\") {\n      return { url: obj, option: mergedOptions };\n    } else if (obj && typeof obj === 'object' && obj.url) {\n      return { url: obj.url, option: Object.assign({}, mergedOptions, obj.option) };\n    } else {\n      console.error(\"Invalid import data format in addTmplByUrl:\", obj);\n      return null;\n    }\n  };\n\n  const appendElements = (elements: NodeListOf<Element> | Element[]): void => {\n    elements.forEach(element => {\n      if (!element) return;\n      if (element.id) {\n        const oldElement = document.getElementById(element.id);\n        if (oldElement) oldElement.parentNode?.removeChild(oldElement);\n      }\n      if (element.tagName === 'SCRIPT' || element.tagName === 'LINK' || element.tagName === 'STYLE') {\n        document.head.appendChild(element);\n      } else {\n        document.body.appendChild(element);\n      }\n    });\n  };\n\n  const importFunc = (source: string, currentOption: Record<string, any>): void => {\n    const templateContainer = safeTemplate(source);\n    addTmpls(templateContainer, false, currentOption.tmplSettings);\n    const content = (templateContainer as TemplateElement).content || templateContainer;\n\n    if (currentOption.loadLink) {\n      const links = content.querySelectorAll<HTMLLinkElement>('link[rel=\"stylesheet\"]');\n      appendElements(links);\n    }\n    if (currentOption.loadStyle) {\n      const styles = content.querySelectorAll<HTMLStyleElement>(\"style[id]\");\n      appendElements(styles);\n    }\n    if (currentOption.loadScript) {\n      const scripts = content.querySelectorAll<HTMLScriptElement>(\n        'script:not([type]), script[type=\"text/javascript\"], script[type=\"module\"]'\n      );\n      const executableScripts = Array.from(scripts)\n        .filter(node => {\n          let parent = node.parentNode;\n          while (parent) {\n            if (parent.nodeName === 'TEMPLATE' || (parent.nodeName === 'SCRIPT' && (parent as HTMLScriptElement).type.includes('template'))) return false;\n            parent = parent.parentNode;\n          }\n          return true;\n        })\n        .map(node => {\n          const scriptElm = document.createElement(\"script\");\n          node.getAttributeNames().forEach(name => scriptElm.setAttribute(name, node.getAttribute(name)!));\n          if (node.innerHTML) scriptElm.textContent = node.innerHTML;\n          return scriptElm;\n        });\n      appendElements(executableScripts);\n    }\n  };\n\n  const loadResource = (dataItem: string | any): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      const parsedData = importDataParser(dataItem);\n      if (!parsedData) {\n        resolve(); // Resolve immediately for invalid data\n        return;\n      }\n      const src = parsedData.url;\n      const currentOption = parsedData.option;\n\n      if (src.endsWith(\".js\")) {\n        const script = genElement(\"script\", { async: true, src: src }) as HTMLScriptElement;\n        //script.onload = () => resolve();\n        script.onerror = () => { console.error(`Failed to load script: ${src}`); }; // Resolve even on error\n        document.head.appendChild(script);\n        resolve();\n      } else if (src.endsWith(\".css\")) {\n        const link = genElement(\"link\", { type: \"text/css\", rel: \"stylesheet\", href: src }) as HTMLLinkElement;\n        //link.onload = () => resolve(); // CSS load might be unreliable\n        link.onerror = () => { console.error(`Failed to load stylesheet: ${src}`); }; // Resolve even on error\n        document.head.appendChild(link);\n        resolve();\n        // Resolve slightly early for CSS? Or rely on potential browser caching?\n        // For simplicity, let's resolve on load/error.\n      } else {\n        requestFunc(src, null, (source, status) => {\n          if (status === 200 || status === 0) {\n            try {\n              importFunc(source!, currentOption); // Use non-null assertion for source\n            } catch (e) {\n              console.error(`Error processing imported HTML from ${src}:`, e);\n            }\n          } else {\n            console.error(`Failed to fetch template file: ${src} (Status: ${status})`);\n          }\n          resolve(); // Resolve after processing or error\n        });\n      }\n    });\n  };\n\n  const finalCallback = callback || (() => { }); // Ensure callback is a function\n\n  if (Array.isArray(importData)) {\n    if (importData.length === 0) {\n      finalCallback();\n      return;\n    }\n    Promise.all(importData.map(loadResource)).then(finalCallback as ((value: void[]) => void[] | PromiseLike<void[]>)).catch(err => {\n      console.error(\"Error loading resources in addTmplByUrl:\", err);\n      finalCallback(); // Call callback even if some resources failed\n    });\n  } else {\n    loadResource(importData).then(finalCallback as ((value: void) => void[] | PromiseLike<void[]>)).catch(err => {\n      console.error(\"Error loading resource in addTmplByUrl:\", err);\n      finalCallback(); // Call callback even if resource failed\n    });\n  }\n});\n\nconst requestFunc = function (url: string, option: RequestInit | null, callback: (responseText: string | null, status: number, xhr: XMLHttpRequest) => void): void {\n  const xmlhttp = new XMLHttpRequest();\n\n  xmlhttp.onreadystatechange = function () {\n    if (xmlhttp.readyState == XMLHttpRequest.DONE) {\n      if (xmlhttp.status == 200 || xmlhttp.status === 0) {\n        callback(xmlhttp.responseText, xmlhttp.status, xmlhttp);\n      } else {\n        if (xmlhttp.status == 404) console.error(`Error 404: Not Found - ${url}`);\n        else if (xmlhttp.status >= 400) console.error(`HTTP Error ${xmlhttp.status} for ${url}`);\n        else console.error(`Request failed for ${url}`, xmlhttp.statusText);\n        callback(null, xmlhttp.status, xmlhttp);\n      }\n    }\n  };\n\n  xmlhttp.onerror = function () {\n    console.error(`Network error requesting ${url}`);\n    callback(null, 0, xmlhttp);\n  };\n  xmlhttp.ontimeout = function () {\n    console.error(`Request timed out for ${url}`);\n    callback(null, 408, xmlhttp);\n  };\n\n  try {\n    const method = (option && (option as any).method) || \"GET\";\n    xmlhttp.open(method, url, true);\n\n    if (option) {\n      if ((option as any).timeout) xmlhttp.timeout = (option as any).timeout;\n      if (option.headers) {\n        Object.entries(option.headers).forEach(([key, value]) => {\n          xmlhttp.setRequestHeader(key, value);\n        });\n      }\n      xmlhttp.send(option.body as any || null);\n    } else {\n      xmlhttp.send();\n    }\n  } catch (e: any) {\n    console.error(`Error sending request to ${url}:`, e);\n    callback(null, 0, xmlhttp);\n  }\n};\n\ncompomint.i18n = {};\n\ncompomint.addI18n = function (fullKey: string, i18nObj: Record<string, any>): void {\n  if (!fullKey || typeof fullKey !== 'string' || !i18nObj || typeof i18nObj !== 'object') {\n    console.error(\"Invalid arguments for addI18n:\", fullKey, i18nObj);\n    return;\n  }\n\n  const langKeyNames = fullKey.split(\".\");\n  let target: any = compomint.i18n;\n  const keyLength = langKeyNames.length - 1;\n\n  langKeyNames.forEach(function (key: string, i: number) {\n    if (!key) return;\n\n    if (keyLength === i) {\n      if (!target[key]) {\n        target[key] = function (defaultText?: string): string {\n          const lang = document.documentElement.lang || 'en';\n          let label = i18nObj[lang];\n          if (label === undefined || label === null) {\n            label = defaultText;\n            if (configs.debug) console.warn(`i18n: Label key [\"${fullKey}\"] for lang \"${lang}\" is missing. Using default: \"${defaultText}\"`);\n          }\n          return label !== undefined && label !== null ? String(label) : '';\n        };\n      }\n      // Handle nested objects within the language definitions\n      Object.keys(i18nObj)\n        .filter((lang) => i18nObj[lang] instanceof Object && !Array.isArray(i18nObj[lang])) // Check for plain objects\n        .forEach((subKey) => {\n          compomint.addI18n(fullKey + \".\" + subKey, i18nObj[subKey]);\n          // delete i18nObj[subKey]; // Avoid deleting if it's also a language key\n        });\n    } else {\n      if (!target[key]) {\n        target[key] = {};\n      }\n      target = target[key];\n    }\n  });\n};\n\ncompomint.addI18ns = function (i18nObjs: Record<string, any>): void {\n  Object.keys(i18nObjs || {}).forEach(function (key) {\n    compomint.addI18n(key, i18nObjs[key]);\n  });\n};\n\nlet elementCount = 0;\ntools.genId = function (tmplId: string): string {\n  elementCount++;\n  return tmplId + elementCount;\n};\n\nconst genElement = (tools.genElement = function (\n  tagName: string,\n  attrs: Record<string, any> | string | Node | (string | Node)[] = {},\n  ...children: (string | Node)[]\n): Element {\n  const element = document.createElement(tagName);\n  let actualAttrs: Record<string, any> = {};\n\n  if (typeof attrs === 'string') {\n    children.unshift(attrs); // Prepend string as first child\n  } else if (attrs instanceof Node) {\n    children.unshift(attrs); // Prepend Node as first child\n  } else if (Array.isArray(attrs)) {\n    children = attrs.concat(children); // Concatenate arrays\n  } else {\n    actualAttrs = attrs; // It's an attributes object\n  }\n\n  // Set attributes/properties\n  Object.keys(actualAttrs).forEach(function (key) {\n    const value = actualAttrs[key];\n    const propName = key === 'class' ? 'className' : key;\n\n    try {\n      if (key === 'style' && typeof value === 'object' && value !== null) {\n        Object.assign(element.style, value); // Assign style object\n      } else if (key === 'dataset' && typeof value === 'object' && value !== null) {\n        Object.assign((element as HTMLElement).dataset, value); // Assign dataset object\n      } else if (key.startsWith('on') && typeof value === 'function') {\n        // Directly assign event handlers like onclick, onmouseover\n        (element as any)[key.toLowerCase()] = value;\n      } else if (propName in element) {\n        (element as any)[propName] = value;\n      } else {\n        element.setAttribute(key, String(value));\n      }\n    } catch (e: any) {\n      console.error(`Error setting attribute/property \"${key}\" on <${tagName}>:`, e);\n    }\n  });\n\n  // Append children\n  children.forEach(child => {\n    if (typeof child === 'string') {\n      element.appendChild(document.createTextNode(child));\n    } else if (child instanceof Node) {\n      element.appendChild(child);\n    }\n  });\n  return element;\n});\n\ntools.props = function (...propsObjects: Record<string, any>[]): string {\n  if (!propsObjects || propsObjects.length === 0) return \"\";\n  const mergedProps = Object.assign({}, ...propsObjects);\n  const propStrArray: string[] = [];\n  Object.keys(mergedProps).forEach(function (key) {\n    const value = mergedProps[key];\n    if (value || value === 0) {\n      const escapedValue = String(value).replace(/\"/g, '&quot;');\n      propStrArray.push(`${key}=\"${escapedValue}\"`);\n    }\n  });\n  return propStrArray.join(\" \");\n};\n\n// Add built-in template\napplyBuiltInTemplates(addTmpl);\n\n\nexport { compomint, tmpl, CompomintGlobal };","import { ComponentScope, LazyScope, TemplateConfig, TemplateRule, TemplateElement, CompomintConfigs, CompomintGlobal } from \"./type\";\n\nimport {\n  firstElementChild,\n  childElementCount,\n  stringToElement,\n} from \"./utils\";\n\n// \n// Default template settings\n//\nconst defaultTemplateConfig = (configs: CompomintConfigs, compomint: CompomintGlobal): TemplateConfig => ({\n  rules: {\n    style: {\n      pattern: /(\\<style id=[\\s\\S]+?\\>[\\s\\S]+?\\<\\/style\\>)/g,\n      exec: function (style: string): string {\n        // Create a temporary element to parse the style tag\n        const dumy = document.createElement(\"template\");\n        dumy.innerHTML = style;\n        const styleNode = (dumy.content || dumy).querySelector(\"style\");\n        if (!styleNode || !styleNode.id) return \"\"; // Skip if no style node or ID\n        const oldStyleNode = document.getElementById(styleNode.id);\n        if (oldStyleNode) oldStyleNode.parentNode?.removeChild(oldStyleNode);\n        document.head.appendChild(styleNode);\n        return \"\";\n      },\n    },\n    commentArea: {\n      pattern: /##\\*([\\s\\S]+?)##/g,\n      exec: function (commentArea: string): string {\n        // Return an empty string to remove the comment block\n        return ``;\n      },\n    },\n    preEvaluate: {\n      pattern: /##!([\\s\\S]+?)##/g,\n      exec: function (preEvaluate: string, tmplId: string): string {\n        try {\n          // Execute the code in a new function context\n          new Function(\"tmplId\", preEvaluate)(tmplId);\n        } catch (e: any) {\n          if (configs.throwError) {\n            console.error(`Template preEvaluate error in \"${tmplId}\", ${e.name}: ${e.message}`);\n            throw e;\n          } else {\n            console.warn(`Template preEvaluate error in \"${tmplId}\", ${e.name}: ${e.message}`);\n          }\n        }\n        return ``;\n      },\n    },\n    interpolate: {\n      pattern: /##=([\\s\\S]+?)##/g,\n      exec: function (interpolate: string): string {\n        // Construct JavaScript code to interpolate the value\n        const interpolateSyntax = `typeof (interpolate)=='function' ? (interpolate)() : (interpolate)`;\n        return (`';\\n(() => {let __t, interpolate=${interpolate};\\n__p+=((__t=(${interpolateSyntax}))==null ? '' : String(__t) );})();\\n__p+='`); // Ensure string conversion\n      },\n    },\n    escape: {\n      pattern: /##-([\\s\\S]+?)##/g,\n      exec: function (escape: string): string {\n        const escapeSyntax = `compomint.tools.escapeHtml.escape(typeof (escape)=='function' ? (escape)() : (escape))`;\n        // Construct JavaScript code to escape HTML characters in the value\n        return (`';\\n(() => {let __t, escape=${escape};\\n__p+=((__t=(${escapeSyntax}))==null ? '' : String(__t) );})();\\n__p+='`); // Ensure string conversion before escape\n      },\n    },\n    elementProps: {\n      pattern: /data-co-props=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (props: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.elementPropsArray.length);\\n__p+='data-co-props=\"'+eventId+'\"';\\n\n__lazyScope.elementPropsArray[eventId] = ${props};\\n__p+='`; // Store props in lazy scope\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        // Iterate over stored props and apply them to elements\n        lazyScope.elementPropsArray.forEach(function (props: Record<string, any> | null, eventId: number) {\n          if (!props) return;\n          // Find the element with the corresponding data-co-props attribute\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-props=\"${eventId}\"]`\n          );\n          // Remove the temporary attribute and set the properties\n          if (!$elementTrigger) return;\n          delete ($elementTrigger as HTMLElement).dataset.coProps;\n          Object.keys(props).forEach(function (key: string) {\n            $elementTrigger.setAttribute(key, String(props[key])); // Ensure value is string\n          });\n        });\n      }\n    },\n    namedElement: {\n      pattern: /data-co-named-element=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (key: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.namedElementArray.length);\\n__p+='data-co-named-element=\"'+eventId+'\"';\\n\n__lazyScope.namedElementArray[eventId] = ${key};\\n__p+='`; // Store the key in lazy scope\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        // Iterate over stored keys and assign elements to the component\n        lazyScope.namedElementArray.forEach(function (key: string, eventId: number) {\n          // Find the element with the corresponding data-co-named-element attribute\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-named-element=\"${eventId}\"]`\n          );\n          // Assign the element to the component using the key\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Named element target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coNamedElement;\n          component[key] = $elementTrigger;\n        });\n      },\n    },\n    elementRef: {\n      pattern: /data-co-element-ref=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (key: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.elementRefArray.length);\\n__p+='data-co-element-ref=\"'+eventId+'\"';\nvar ${key} = null;\\n__lazyScope.elementRefArray[eventId] = function(target) {${key} = target;};\\n__p+='`; // Store a function to assign the element\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        // Iterate over stored functions and call them with the corresponding elements\n        lazyScope.elementRefArray.forEach(function (func: (target: Element) => void, eventId: number) {\n          // Find the element with the corresponding data-co-element-ref attribute\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-element-ref=\"${eventId}\"]`\n          );\n          // Call the stored function with the element\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Element ref target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coElementRef;\n          func.call($elementTrigger, $elementTrigger);\n        });\n      },\n    },\n    elementLoad: {\n      pattern: /data-co-load=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (elementLoad: string): string {\n        const elementLoadSplitArray = elementLoad.split(\"::\");\n        // Store the load function and custom data in lazy scope\n        const source = `';\\nlet eventId = (__lazyScope.elementLoadArray.length);\\n__p+='data-co-load=\"'+eventId+'\"';\n__lazyScope.elementLoadArray[eventId] = {loadFunc: ${elementLoadSplitArray[0]}, customData: ${elementLoadSplitArray[1]}};\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        // Iterate over stored load functions and execute them with the corresponding elements\n        lazyScope.elementLoadArray.forEach(function (elementLoad: { loadFunc: Function; customData: Record<string, any> }, eventId: number) {\n          // Find the element with the corresponding data-co-load attribute\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-load=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Element load target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          // Execute the load function with the element and context\n          delete ($elementTrigger as HTMLElement).dataset.coLoad;\n          try {\n            if (typeof elementLoad.loadFunc === 'function') {\n              const loadFuncParams: [Element, Element, { data: Record<string, any>; element: Element; customData: Record<string, any>; component: ComponentScope, compomint: CompomintGlobal }] = [\n                $elementTrigger,\n                $elementTrigger,\n                {\n                  \"data\": data,\n                  \"element\": $elementTrigger,\n                  \"customData\": elementLoad.customData,\n                  \"component\": component,\n                  \"compomint\": compomint,\n                },\n              ];\n              elementLoad.loadFunc.call(...loadFuncParams);\n            }\n          } catch (e: any) {\n            console.error(`Error executing elementLoad function for ID ${eventId} in template ${component.tmplId}:`, e, elementLoad.loadFunc);\n            if (configs.throwError) throw e;\n          }\n        });\n      },\n    },\n    event: {\n      pattern: /data-co-event=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (event: string): string {\n        const eventStrArray = event.split(\":::\");\n        // Store event handlers in lazy scope\n        let source = `';\\n(() => {let eventId = (__lazyScope.eventArray.length);\\n__p+='data-co-event=\"'+eventId+'\"';\\n`;\n        const eventArray: string[] = [];\n        for (let i = 0, size = eventStrArray.length; i < size; i++) {\n          const eventSplitArray = eventStrArray[i].split(\"::\");\n          eventArray.push(\n            `{eventFunc: ${eventSplitArray[0]}, $parent: this, customData: ${eventSplitArray[1]}}`\n          );\n        }\n        source += `__lazyScope.eventArray[eventId] = [${eventArray.join(\",\")}];})()\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        const self = this as TemplateRule; // Cast self to TemplateSettings\n        const attacher = self.attacher;\n        if (!attacher) return; // Guard against missing attacher\n\n        // Iterate over stored event handlers and attach them to elements\n        lazyScope.eventArray.forEach(function (selectedArray: { eventFunc: Function | Record<string, Function>; $parent: any; customData: any }[], eventId: number) {\n          // Find the element with the corresponding data-co-event attribute\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-event=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Event target not found for ID ${eventId} in template ${component.tmplId}`); // Debugging: Log if target not found\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coEvent;\n          for (let i = 0, size = selectedArray.length; i < size; i++) {\n            const selected = selectedArray[i];\n            if (selected.eventFunc) {\n              if (Array.isArray(selected.eventFunc)) {\n                selected.eventFunc.forEach(function (func: Function) {\n                  attacher(\n                    self, data, lazyScope, component, wrapper, $elementTrigger,\n                    func,\n                    selected\n                  );\n                });\n              } else {\n                attacher(\n                  self, data, lazyScope, component, wrapper, $elementTrigger,\n                  selected.eventFunc,\n                  selected\n                );\n              }\n            }\n          }\n        });\n      },\n      trigger: function (target: Element, eventName: string): void {\n        const customEvent = new Event(eventName, {\n          // Dispatch a custom event on the target element\n          bubbles: true,\n          cancelable: true\n        });\n        target.dispatchEvent(customEvent);\n      },\n      attacher: function (\n        self: any, // Type properly if possible\n        data: Record<string, any>,\n        lazyScope: LazyScope,\n        component: ComponentScope,\n        wrapper: DocumentFragment | Element,\n        $elementTrigger: Element,\n        eventFunc: Function | Record<string, Function>,\n        eventData: Record<string, any>\n      ): void {\n        const trigger = self.trigger;\n        const $childTarget = firstElementChild(wrapper);\n        const $targetElement =\n          childElementCount(wrapper) == 1 ? $childTarget : null;\n        // Attach event listeners based on the type of eventFunc\n\n        if (!eventFunc) {\n          return;\n        }\n\n        const eventFuncParams: [Element, Event | Element | null, { data: Record<string, any>; customData: Record<string, any>; element: Element; componentElement: Element | null | undefined; component: ComponentScope, compomint: CompomintGlobal }] = [\n          $elementTrigger,\n          null,\n          {\n            \"data\": data,\n            \"customData\": eventData.customData,\n            \"element\": $elementTrigger,\n            \"componentElement\": $targetElement || $childTarget?.parentElement,\n            \"component\": component,\n            \"compomint\": compomint,\n          },\n        ];\n\n        if (typeof eventFunc === 'function') {\n          // Attach a click event listener for a single function\n          $elementTrigger.addEventListener(\"click\", function (event: Event) {\n            event.stopPropagation();\n            eventFuncParams[1] = event;\n            try {\n              eventFunc.call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in event handler for template ${component.tmplId}:`, e, eventFunc);\n              if (configs.throwError) throw e;\n            }\n          });\n          return;\n        }\n\n        const eventMap = eventFunc as Record<string, Function>;\n        // Handle event map with multiple event types\n        const triggerName = eventMap.triggerName as unknown as string | undefined; // Optional key to store trigger functions\n        if (triggerName) {\n          component.trigger = component.trigger || {};\n          component.trigger[triggerName] = {};\n        }\n\n        Object.keys(eventMap).forEach(function (eventType: string) {\n          // Handle special event types like \"load\", \"namedElement\", and \"triggerName\"\n          if (eventType == \"load\") {\n            eventFuncParams[1] = $elementTrigger;\n            try {\n              eventMap[eventType].call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in 'load' event handler for template ${component.tmplId}:`, e, eventMap[eventType]);\n              if (configs.throwError) throw e;\n            }\n            return;\n          } else if (eventType == \"namedElement\") {\n            component[eventMap[eventType] as unknown as string] = $elementTrigger;\n            return;\n          } else if (eventType == \"triggerName\") {\n            return;\n            // Attach event listeners for other event types\n          }\n\n          $elementTrigger.addEventListener(eventType, function (event: Event) {\n            event.stopPropagation();\n            eventFuncParams[1] = event;\n            try {\n              eventMap[eventType].call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in '${eventType}' event handler for template ${component.tmplId}:`, e, eventMap[eventType]);\n              if (configs.throwError) throw e;\n            }\n          });\n\n          if (triggerName && trigger) {\n            component.trigger![triggerName][eventType] = function () {\n              trigger($elementTrigger, eventType);\n            };\n          }\n        });\n      },\n    },\n    element: {\n      pattern: /##%([\\s\\S]+?)##/g,\n      exec: function (target: string): string {\n        // Store element insertion information in lazy scope\n        const elementSplitArray = target.split(\"::\");\n        const source = `';\\n(() => {\nlet elementId = (__lazyScope.elementArray.length);\n__p+='<template data-co-tmpl-element-id=\"'+elementId+'\"></template>';\n__lazyScope.elementArray[elementId] = {childTarget: ${elementSplitArray[0]}, nonblocking: ${(elementSplitArray[1] || false)}};})();\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        const self = this as TemplateRule; // Cast self\n\n        lazyScope.elementArray.forEach(function (ele: { childTarget: any; nonblocking: boolean | number }, elementId: number) {\n          // Retrieve element insertion details from lazy scope\n          const childTarget = ele.childTarget;\n          const nonblocking = ele.nonblocking;\n          // Find the placeholder element\n          const $tmplElement = wrapper.querySelector<TemplateElement>(\n            `template[data-co-tmpl-element-id=\"${elementId}\"]`\n          );\n          // Perform the element insertion\n          if (!$tmplElement) {\n            if (configs.debug) console.warn(`Element insertion placeholder not found for ID ${elementId} in template ${component.tmplId}`);\n            return;\n          }\n          if (!$tmplElement.parentNode) {\n            if (configs.debug) console.warn(`Element insertion placeholder for ID ${elementId} in template ${component.tmplId} has no parent.`);\n            return;\n          }\n\n          const doFunc = function () {\n            if (!$tmplElement || !$tmplElement.parentNode) {\n              if (configs.debug) console.warn(`Placeholder for ID ${elementId} removed before insertion in template ${component.tmplId}.`);\n              return;\n            }\n\n            // Handle different types of childTarget for insertion\n            try {\n              if (childTarget instanceof Array) {\n                const docFragment = document.createDocumentFragment();\n                childTarget.forEach(function (child: any) {\n                  if (!child) return;\n                  const childElement = child.element || child;\n                  let nodeToAppend: Node | null = null;\n                  // Convert child to a DOM node if necessary\n\n                  if (typeof childElement === \"string\" || typeof childElement === \"number\") {\n                    nodeToAppend = stringToElement(childElement);\n                  } else if (typeof childElement === \"function\") {\n                    nodeToAppend = stringToElement(childElement());\n                  } else if (childElement instanceof Node) {\n                    nodeToAppend = childElement;\n                  } else {\n                    if (configs.debug) console.warn(`Invalid item type in element array for ID ${elementId}, template ${component.tmplId}:`, childElement);\n                    return;\n                  }\n                  // Append the node to the document fragment\n                  if (child.beforeAppendTo) { try { child.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo (array item):\", e); } }\n                  if (nodeToAppend) docFragment.appendChild(nodeToAppend);\n                });\n                // Replace the placeholder with the document fragment\n                $tmplElement.parentNode.replaceChild(docFragment, $tmplElement);\n\n                // Call afterAppendTo for each child\n                childTarget.forEach(function (child: any) {\n                  if (child && child.afterAppendTo) {\n                    setTimeout(() => {\n                      try { child.afterAppendTo(); } catch (e) { console.error(\"Error in afterAppendTo (array item):\", e); }\n                    }, 0);\n                  }\n                });\n                // Handle string, number, or function types\n              } else if (typeof childTarget === \"string\" || typeof childTarget === \"number\") {\n                $tmplElement.parentNode.replaceChild(\n                  stringToElement(childTarget),\n                  $tmplElement\n                );\n                // Handle function type\n              } else if (typeof childTarget === \"function\") {\n                $tmplElement.parentNode.replaceChild(\n                  stringToElement(childTarget()),\n                  $tmplElement\n                );\n                // Handle Node or ComponentScope types\n              } else if (childTarget && (childTarget.element || childTarget) instanceof Node) {\n                const childScope = childTarget as ComponentScope; // Assume it might be a scope\n                const childElement = childScope.element || childScope;\n\n                // Replace the placeholder with the child element\n                if (childScope.beforeAppendTo) { try { childScope.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n                $tmplElement.parentNode.replaceChild(childElement, $tmplElement);\n                // Call afterAppendTo if available\n                if (childScope.afterAppendTo) {\n                  setTimeout(() => {\n                    try {\n                      if (childScope.afterAppendTo) childScope.afterAppendTo();\n                    } catch (e) { console.error(\"Error in afterAppendTo:\", e); }\n                  }, 0);\n                }\n                // Set parentComponent if it's a component\n                if (childScope.tmplId) {\n                  childScope.parentComponent = component;\n                }\n                // Handle invalid target types\n              } else {\n                if (configs.debug) console.warn(`Invalid target for element insertion ID ${elementId}, template ${component.tmplId}:`, childTarget);\n                $tmplElement.parentNode.removeChild($tmplElement);\n              }\n            } catch (e: any) {\n              console.error(`Error during element insertion for ID ${elementId}, template ${component.tmplId}:`, e);\n              if (configs.throwError) throw e;\n              if ($tmplElement && $tmplElement.parentNode) {\n                try { $tmplElement.parentNode.removeChild($tmplElement); } catch (removeError) { /* Ignore */ }\n              }\n            } // end try\n          }; // end doFunc\n\n          (nonblocking == undefined || nonblocking === false)\n            // Execute immediately or with a delay based on nonblocking\n            ? doFunc()\n            : setTimeout(doFunc, typeof nonblocking === 'number' ? nonblocking : 0);\n\n        }); // end forEach\n      }\n    },\n    lazyEvaluate: {\n      pattern: /###([\\s\\S]+?)##/g,\n      exec: function (lazyEvaluate: string): string {\n        const source = `';\\n__lazyScope.lazyEvaluateArray.push(function(data) {${lazyEvaluate}});\\n__p+='`;\n        // Store the lazy evaluation function in lazy scope\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        // Execute stored lazy evaluation functions\n        const $childTarget = firstElementChild(wrapper);\n        const $targetElement =\n          childElementCount(wrapper) == 1 ? $childTarget : null;\n        lazyScope.lazyEvaluateArray.forEach(function (selectedFunc: (data: Record<string, any>) => void, idx: number) {\n          // Call the function with the appropriate context\n          try {\n            selectedFunc.call($targetElement || wrapper, data); // Use wrapper if multiple elements\n          } catch (e: any) {\n            console.error(`Error in lazyEvaluate block ${idx} for template ${component.tmplId}:`, e, selectedFunc);\n            if (configs.throwError) throw e;\n          }\n        });\n        return;\n      },\n    },\n    evaluate: {\n      pattern: /##([\\s\\S]+?)##/g,\n      exec: (evaluate: string): string => {\n        // Insert arbitrary JavaScript code into the template function\n        return \"';\\n\" + evaluate + \"\\n__p+='\";\n      },\n    },\n  },\n  keys: {\n    dataKeyName: \"data\",\n    statusKeyName: \"status\",\n    componentKeyName: \"component\",\n    i18nKeyName: \"i18n\",\n  }\n\n});\n\nexport { defaultTemplateConfig }","\nimport { CompomintGlobal } from \"./type\"\n\nconst applyBuiltInTemplates = (addTmpl: CompomintGlobal[\"addTmpl\"]): void => {\n  // co-Ele is a shorthand for co-Element, it will generate a div element with the given props and event\n  addTmpl(\"co-Ele\", `##%compomint.tools.genElement(data[0], data[1])##`);\n  addTmpl(\n    \"co-Element\",\n    `##\n  data.tag = data.tag || 'div';\n  ##\n  &lt;##=data.tag##\n    ##=data.id ? 'id=\"' + (data.id === true ? component._id : data.id) + '\"' : ''##\n    data-co-props=\"##:data.props##\"\n    data-co-event=\"##:data.event##\"&gt;\n    ##if (typeof data.content === \"string\") {##\n    ##=data.content##\n    ##} else {##\n      ##%data.content##\n    ##}##\n  &lt;/##=data.tag##&gt;`\n  );\n}\n\nexport { applyBuiltInTemplates }"],"names":["firstElementChild","ele","children","childNodes","i","size","length","Element","childElementCount","Array","prototype","filter","call","child","cleanNode","node","n","nodeType","test","nodeValue","removeChild","domParser","DOMParser","stringToElement","str","isNaN","Number","document","createTextNode","String","body","parseFromString","firstChild","fragment","createDocumentFragment","appendChild","e","Object","assign","defineProperty","value","target","params","TypeError","to","index","nextSource","nextKey","hasOwnProperty","writable","configurable","CharacterData","DocumentType","forEach","item","enumerable","this","parentNode","window","Node","get","contains","compomint","tmpl","tools","configs","printExecTime","debug","throwError","cachedTmpl","tmplCache","Map","has","set","elements","Set","isSupportTemplateTag","createElement","noMatch","escapes","escaper","templateConfig","rules","style","pattern","exec","dumy","innerHTML","styleNode","content","querySelector","id","oldStyleNode","getElementById","head","commentArea","preEvaluate","tmplId","Function","console","error","name","message","warn","interpolate","escape","elementProps","props","lazyExec","data","lazyScope","component","wrapper","elementPropsArray","eventId","$elementTrigger","dataset","coProps","keys","key","setAttribute","namedElement","namedElementArray","coNamedElement","elementRef","elementRefArray","func","coElementRef","elementLoad","elementLoadSplitArray","split","elementLoadArray","coLoad","loadFunc","loadFuncParams","element","customData","event","eventStrArray","source","eventArray","eventSplitArray","push","join","self","attacher","selectedArray","coEvent","selected","eventFunc","isArray","trigger","eventName","customEvent","Event","bubbles","cancelable","dispatchEvent","eventData","$childTarget","$targetElement","eventFuncParams","componentElement","parentElement","addEventListener","stopPropagation","eventMap","triggerName","eventType","elementSplitArray","elementArray","elementId","childTarget","nonblocking","$tmplElement","doFunc","docFragment","childElement","nodeToAppend","beforeAppendTo","replaceChild","afterAppendTo","setTimeout","childScope","parentComponent","removeError","undefined","lazyEvaluate","lazyEvaluateArray","selectedFunc","idx","evaluate","dataKeyName","statusKeyName","componentKeyName","i18nKeyName","defaultTemplateConfig","escapeHtml","escapeMap","unescapeMap","fromEntries","entries","map","createEscaper","match","replace","testRegexp","RegExp","replaceRegexp","string","unescape","matcherFunc","templateRules","patternArray","execArray","lazyExecMap","lazyScopeSeed","templateRule","arrayKey","lazyExecKeys","JSON","stringify","escapeFunc","defaultMatcher","templateBuilder","template","templateText","customTemplateConfig","matcher","text","time","offset","selectedMatchContent","slice","matchIndex","some","timeEnd","templateParser","sourceGenFunc","renderingFunc","wrapperElement","callback","baseComponent","firstArg","$wrapperElement","$callback","$baseComponent","parse","status","newComponent","remove","spacer","beforeRemove","parent","removedElement","afterRemove","appendTo","release","render","newData","refresh","reflashData","reflash","_id","genId","hasParent","temp","returnTarget","renderedHTML","i18n","log","createComment","tagName","from","host","shadow","attachShadow","mode","$props","prop","startsWith","camelCased","substring","g","toUpperCase","normalize","liveReloadSupport","getOwnPropertyNames","keepProps","includes","currentComponent","targetElement","tmplFunc","hooks","beforeRefresh","afterRefresh","currentData","tmplMeta","tmplIdNames","group","groupObj","part","charAt","remapTmpl","json","oldKey","newKey","meta","safeTemplate","encodedSource","addTmpl","addTmpls","removeInnerTemplate","container","querySelectorAll","coLoadScript","addTmplByUrl","importData","option","defaultOptions","loadScript","loadStyle","loadLink","mergedOptions","appendElements","oldElement","loadResource","dataItem","Promise","resolve","reject","parsedData","obj","url","src","currentOption","endsWith","script","genElement","async","onerror","link","type","rel","href","requestFunc","templateContainer","tmplSettings","links","styles","scripts","executableScripts","nodeName","scriptElm","getAttributeNames","getAttribute","textContent","importFunc","finalCallback","all","then","catch","err","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","responseText","statusText","ontimeout","method","open","timeout","headers","setRequestHeader","send","addI18n","fullKey","i18nObj","langKeyNames","keyLength","defaultText","lang","documentElement","label","subKey","addI18ns","i18nObjs","elementCount","attrs","actualAttrs","unshift","concat","propName","toLowerCase","propsObjects","mergedProps","propStrArray","escapedValue","applyBuiltInTemplates"],"mappings":"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"}