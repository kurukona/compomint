{"version":3,"file":"compomint.min.js","sources":["../src/compomint-core.ts"],"sourcesContent":["/*\n * Copyright (c) 2025-present, Choi Sungho\n * Code released under the MIT license\n */\n\n// Define interfaces for better type safety\ninterface CompomintConfigs {\n  printExecTime?: boolean;\n  debug?: boolean;\n  throwError?: boolean;\n}\n\ninterface TemplateMeta {\n  renderingFunc: RenderingFunction;\n  source?: string;\n  templateText?: string;\n  elements?: Set<any>; // Assuming elements is a Set, adjust type as needed\n}\n\ninterface LazyScope {\n  [key: string]: any[]; // General structure for lazy scope arrays\n  elementPropsArray: any[];\n  namedElementArray: string[];\n  elementRefArray: ((target: Element) => void)[];\n  elementLoadArray: { loadFunc: Function; customData: any }[];\n  eventArray: { eventFunc: Function | Record<string, Function>; $parent: any; customData: any }[][];\n  elementArray: { childTarget: any; nonblocking: boolean | number }[];\n  lazyEvaluateArray: ((data: Record<string, any>) => void)[];\n}\n\ninterface TemplateRule {\n  pattern: RegExp;\n  exec: (...args: any[]) => string;\n  lazyExec?: (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element) => void;\n  attacher?: (\n    self: any,\n    data: Record<string, any>,\n    lazyScope: LazyScope,\n    component: ComponentScope,\n    wrapper: DocumentFragment | Element,\n    elementTrigger: Element,\n    eventFunc: Function | Record<string, Function>,\n    eventData: Record<string, any>\n  ) => void;\n  trigger?: (target: Element, eventName: string) => void;\n}\n\n\ninterface TemplateConfig {\n  rules: Record<string, TemplateRule>;\n  keys: {\n    dataKeyName: string,\n    statusKeyName: string,\n    componentKeyName: string,\n    i18nKeyName: string,\n  };\n}\n\ninterface ComponentScope {\n  tmplId: string;\n  _id: string;\n  element: HTMLElement | TemplateElement;\n  wrapperElement?: Element;\n  parentComponent?: ComponentScope;\n  status: Record<string, any>;\n  data: Record<string, any>;\n  trigger?: Record<string, Record<string, () => void>>;\n  [key: string]: any; // Allow arbitrary properties for named elements etc.\n\n  replace(newComponent: ComponentScope | Element): void;\n  remove(spacer?: boolean): Element | TemplateElement | Comment;\n  appendTo(parentElement: Element): ComponentScope;\n  release(): void;\n  render(newData: Record<string, any>): ComponentScope;\n  refresh(reflashData: Record<string, any>): ComponentScope;\n  reflash(reflashData: Record<string, any>): ComponentScope; // Alias for refresh\n\n  // Optional lifecycle hooks\n  beforeRemove?(): void;\n  afterRemove?(): void;\n  beforeAppendTo?(): void;\n  afterAppendTo?(): void;\n  beforeRefresh?(): void;\n  afterRefresh?(): void;\n}\n\ntype RenderingFunction = (\n  data?: any,\n  wrapperElement?: Element | ((component: ComponentScope) => void),\n  callback?: (component: ComponentScope) => void,\n  baseComponent?: Partial<ComponentScope>\n) => ComponentScope;\n\ninterface Tools {\n  escapeHtml: {\n    escape: (str: string) => string;\n    unescape: (str: string) => string;\n  };\n  genId: (tmplId: string) => string;\n  genElement: (tagName: string, attrs?: Record<string, any> | string | Node | (string | Node)[], ...children: (string | Node)[]) => Element;\n  props: (...propsObjects: Record<string, any>[]) => string;\n  liveReloadSupport?: (component: ComponentScope) => void;\n  addTmpl: (tmplId: string, element: Element | string, tmplSettings?: Partial<TemplateConfig>) => RenderingFunction;\n  addTmpls: (source: Element | string, removeInnerTemplate?: boolean | Partial<TemplateConfig>, tmplSettings?: Partial<TemplateConfig>) => Element | TemplateElement;\n  addTmplByUrl: (importData: string | any[] | { url: string; option?: Record<string, any> }, option?: Record<string, any> | (() => void), callback?: () => void) => void;\n}\n\ninterface CompomintGlobal {\n  configs: CompomintConfigs;\n  tmplCache: Map<string, TemplateMeta>;\n  templateConfig: TemplateConfig;\n  tools: Tools;\n  i18n: Record<string, any>;\n  template: (tmplId: string, templateText: string, tmplSettings?: Partial<TemplateConfig>) => RenderingFunction;\n  remapTmpl: (json: Record<string, string>) => void;\n  tmpl: (tmplId: string) => RenderingFunction | null;\n  addTmpl: (tmplId: string, element: Element | string, tmplSettings?: Partial<TemplateConfig>) => RenderingFunction;\n  addTmpls: (source: Element | string, removeInnerTemplate?: boolean | Partial<TemplateConfig>, tmplSettings?: Partial<TemplateConfig>) => Element | TemplateElement;\n  addTmplByUrl: (importData: string | any[] | { url: string; option?: Record<string, any> }, option?: Record<string, any> | (() => void), callback?: () => void) => void;\n  addI18n: (fullKey: string, i18nObj: Record<string, any>) => void;\n  addI18ns: (i18nObjs: Record<string, any>) => void;\n}\n\n\n/*\ndeclare global {\n  namespace globalThis {\n    var compomint: compomintGlobal;\n    var tmpl: Record<string, any>; // Global namespace for template functions\n  }\n  interface Node {\n    prototype: Node;\n    new(): Node;\n  }\n  interface CharacterData {\n    prototype: CharacterData;\n    new(): CharacterData;\n  }\n  interface DocumentType {\n    prototype: DocumentType;\n    new(): DocumentType;\n  }\n  interface TemplateElement extends HTMLTemplateElement { // Define TemplateElement if not globally available\n    prototype: HTMLTemplateElement;\n    new(): HTMLTemplateElement;\n  }\n}\n  */\n\n\n// Ensure TemplateElement is defined for environments like older JSDOM\ninterface TemplateElement extends HTMLTemplateElement { }\n\n\n// Extend Window interface\n\n\n// Polyfill for Object.assign\nif (typeof Object.assign != \"function\") {\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target: any, ...params: any[]) {\n      if (target == null) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n      let to = Object(target);\n      for (let index = 0, length = params.length; index < length; index++) {\n        let nextSource = params[index];\n        if (nextSource != null) {\n          for (let nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true,\n  });\n}\n\n// Polyfill for ChildNode.remove\n(function (arr: any[]) {\n  arr.forEach(function (item) {\n    if (!item || item.hasOwnProperty(\"remove\")) {\n      return;\n    }\n    Object.defineProperty(item, \"remove\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode !== null) {\n          this.parentNode.removeChild(this);\n        }\n      },\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\n// Polyfill for Node.isConnected\n(function (supported: boolean) {\n  if (supported) return;\n  Object.defineProperty(window.Node.prototype, \"isConnected\", {\n    get: function (): boolean {\n      return document.body.contains(this);\n    },\n  });\n})(\"isConnected\" in window.Node.prototype);\n\n\nconst compomint = ({} as CompomintGlobal);\nconst tmpl = {} as Record<string, any>;\nconst tools = (compomint.tools = compomint.tools || {} as Tools);\nconst configs = (compomint.configs = Object.assign({ printExecTime: false, debug: false, throwError: true }, compomint.configs));\nconst domParser = new DOMParser()\n\nconst cachedTmpl = (compomint.tmplCache = compomint.tmplCache || new Map<string, TemplateMeta>());\nif (!cachedTmpl.has(\"anonymous\")) {\n  cachedTmpl.set(\"anonymous\", { elements: new Set() } as TemplateMeta); // Cast to TemplateMeta\n}\nconst isSupportTemplateTag = \"content\" in document.createElement(\"template\");\n\n\n\nconst noMatch = /(.)^/;\nconst escapes: Record<string, string> = {\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\",\n  \"\\r\": \"\\\\r\",\n  \"\\n\": \"\\\\n\",\n  \"\\t\": \"\\\\t\",\n  \"\\u2028\": \"\\u2028\",\n  \"\\u2029\": \"\\u2029\",\n  \"><\": \"><\",\n  \"<\": \"<\",\n  \">\": \">\",\n};\n\nconst escaper = /\\>( |\\n)+\\<|\\>( |\\n)+|( |\\n)+\\<|\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\nconst firstElementChild = function (ele: Element | DocumentFragment): Element | null {\n  if (ele.firstElementChild) return ele.firstElementChild;\n  const children = ele.childNodes;\n  for (let i = 0, size = children.length; i < size; i++) {\n    if (children[i] instanceof Element) {\n      return children[i] as Element;\n    }\n  }\n  return null;\n};\n\nconst childNodeCount = function (ele: Element | DocumentFragment): number {\n  return (\n    ele.childElementCount ||\n    Array.prototype.filter.call(ele.childNodes, function (child: Node) {\n      return child instanceof Node;\n    }).length\n  );\n};\n\nconst childElementCount = function (ele: Element | DocumentFragment): number {\n  return (\n    ele.childElementCount ||\n    Array.prototype.filter.call(ele.childNodes, function (child: Node) {\n      return child instanceof Element;\n    }).length\n  );\n};\n\nconst cleanNode = function (node: Node): void {\n  for (let n = 0; n < node.childNodes.length; n++) {\n    const child = node.childNodes[n];\n    if (\n      child.nodeType === 8 || // Comment node\n      (child.nodeType === 3 && !/\\S/.test(child.nodeValue || '')) // Text node with only whitespace\n    ) {\n      node.removeChild(child);\n      n--; // Adjust index after removal\n    } else if (child.nodeType === 1) {\n      // Element node\n      cleanNode(child); // Recurse\n    }\n  }\n};\nconst stringToElement = function (str: string | number): Node {\n  if (typeof str === 'number' || !isNaN(Number(str))) {\n    return document.createTextNode(String(str));\n  } else if (typeof str === 'string') {\n    try {\n      const doc = domParser.parseFromString(str, \"text/html\");\n      const body = doc.body;\n      if (body.childNodes.length === 1) {\n        return body.firstChild!;\n      } else {\n        const fragment = document.createDocumentFragment();\n        while (body.firstChild) {\n          fragment.appendChild(body.firstChild);\n        }\n        return fragment;\n      }\n    } catch (e) {\n      return document.createTextNode(str);\n    }\n  } else {\n    return document.createTextNode('');\n  }\n};\n\ncompomint.templateConfig = {\n  rules: {\n    style: {\n      pattern: /(\\<style id=[\\s\\S]+?\\>[\\s\\S]+?\\<\\/style\\>)/g,\n      exec: function (style: string): string {\n        const dumy = document.createElement(\"template\");\n        dumy.innerHTML = style;\n        const styleNode = (dumy.content || dumy).querySelector(\"style\");\n        if (!styleNode || !styleNode.id) return \"\"; // Skip if no style node or ID\n        const oldStyleNode = document.getElementById(styleNode.id);\n        if (oldStyleNode) oldStyleNode.parentNode?.removeChild(oldStyleNode);\n        document.head.appendChild(styleNode);\n        return \"\";\n      },\n    },\n    commentArea: {\n      pattern: /##\\*([\\s\\S]+?)##/g,\n      exec: function (commentArea: string): string {\n        return ``;\n      },\n    },\n    preEvaluate: {\n      pattern: /##!([\\s\\S]+?)##/g,\n      exec: function (preEvaluate: string, tmplId: string): string {\n        try {\n          new Function(\"tmplId\", preEvaluate)(tmplId);\n        } catch (e: any) {\n          if (configs.throwError) {\n            console.error(`Template preEvaluate error in \"${tmplId}\", ${e.name}: ${e.message}`);\n            throw e;\n          } else {\n            console.warn(`Template preEvaluate error in \"${tmplId}\", ${e.name}: ${e.message}`);\n          }\n        }\n        return ``;\n      },\n    },\n    interpolate: {\n      pattern: /##=([\\s\\S]+?)##/g,\n      exec: function (interpolate: string): string {\n        const interpolateSyntax = `typeof (interpolate)=='function' ? (interpolate)() : (interpolate)`;\n        return (`';\\n(() => {let __t, interpolate=${interpolate};\\n__p+=((__t=(${interpolateSyntax}))==null ? '' : String(__t) );})();\\n__p+='`); // Ensure string conversion\n      },\n    },\n    escape: {\n      pattern: /##-([\\s\\S]+?)##/g,\n      exec: function (escape: string): string {\n        const escapeSyntax = `compomint.tools.escapeHtml.escape(typeof (escape)=='function' ? (escape)() : (escape))`;\n        return (`';\\n(() => {let __t, escape=${escape};\\n__p+=((__t=(${escapeSyntax}))==null ? '' : String(__t) );})();\\n__p+='`); // Ensure string conversion before escape\n      },\n    },\n    elementProps: {\n      pattern: /data-co-props=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (props: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.elementPropsArray.length);\\n__p+='data-co-props=\"'+eventId+'\"';\\n\n__lazyScope.elementPropsArray[eventId] = ${props};\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        lazyScope.elementPropsArray.forEach(function (props: Record<string, any> | null, eventId: number) {\n          if (!props) return;\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-props=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) return;\n          delete ($elementTrigger as HTMLElement).dataset.coProps;\n          Object.keys(props).forEach(function (key: string) {\n            $elementTrigger.setAttribute(key, String(props[key])); // Ensure value is string\n          });\n        });\n      }\n    },\n    namedElement: {\n      pattern: /data-co-named-element=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (key: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.namedElementArray.length);\\n__p+='data-co-named-element=\"'+eventId+'\"';\\n\n__lazyScope.namedElementArray[eventId] = ${key};\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        lazyScope.namedElementArray.forEach(function (key: string, eventId: number) {\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-named-element=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Named element target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coNamedElement;\n          component[key] = $elementTrigger;\n        });\n      },\n    },\n    elementRef: {\n      pattern: /data-co-element-ref=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (key: string): string {\n        const source = `';\\nvar eventId = (__lazyScope.elementRefArray.length);\\n__p+='data-co-element-ref=\"'+eventId+'\"';\nvar ${key} = null;\\n__lazyScope.elementRefArray[eventId] = function(target) {${key} = target;};\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        lazyScope.elementRefArray.forEach(function (func: (target: Element) => void, eventId: number) {\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-element-ref=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Element ref target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coElementRef;\n          func.call($elementTrigger, $elementTrigger);\n        });\n      },\n    },\n    elementLoad: {\n      pattern: /data-co-load=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (elementLoad: string): string {\n        const elementLoadSplitArray = elementLoad.split(\"::\");\n        const source = `';\\nlet eventId = (__lazyScope.elementLoadArray.length);\\n__p+='data-co-load=\"'+eventId+'\"';\n__lazyScope.elementLoadArray[eventId] = {loadFunc: ${elementLoadSplitArray[0]}, customData: ${elementLoadSplitArray[1]}};\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        lazyScope.elementLoadArray.forEach(function (elementLoad: { loadFunc: Function; customData: Record<string, any> }, eventId: number) {\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-load=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Element load target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coLoad;\n          try {\n            elementLoad.loadFunc.call(\n              $elementTrigger,\n              $elementTrigger,\n              {\n                \"data\": data,\n                \"element\": $elementTrigger,\n                \"customData\": elementLoad.customData,\n                \"component\": component,\n              },\n            );\n          } catch (e: any) {\n            console.error(`Error executing elementLoad function for ID ${eventId} in template ${component.tmplId}:`, e, elementLoad.loadFunc);\n            if (configs.throwError) throw e;\n          }\n        });\n      },\n    },\n    event: {\n      pattern: /data-co-event=\"##:([\\s\\S]+?)##\"/g,\n      exec: function (event: string): string {\n        const eventStrArray = event.split(\":::\");\n        let source = `';\\n(() => {let eventId = (__lazyScope.eventArray.length);\\n__p+='data-co-event=\"'+eventId+'\"';\\n`;\n        const eventArray: string[] = [];\n        for (let i = 0, size = eventStrArray.length; i < size; i++) {\n          const eventSplitArray = eventStrArray[i].split(\"::\");\n          eventArray.push(\n            `{eventFunc: ${eventSplitArray[0]}, $parent: this, customData: ${eventSplitArray[1]}}`\n          );\n        }\n        source += `__lazyScope.eventArray[eventId] = [${eventArray.join(\",\")}];})()\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        const self = this as TemplateRule; // Cast self to TemplateSettings\n        const attacher = self.attacher;\n        if (!attacher) return; // Guard against missing attacher\n\n        lazyScope.eventArray.forEach(function (selectedArray: { eventFunc: Function | Record<string, Function>; $parent: any; customData: any }[], eventId: number) {\n          const $elementTrigger = wrapper.querySelector<Element>(\n            `[data-co-event=\"${eventId}\"]`\n          );\n          if (!$elementTrigger) {\n            if (configs.debug) console.warn(`Event target not found for ID ${eventId} in template ${component.tmplId}`);\n            return;\n          }\n          delete ($elementTrigger as HTMLElement).dataset.coEvent;\n          for (let i = 0, size = selectedArray.length; i < size; i++) {\n            const selected = selectedArray[i];\n            if (selected.eventFunc) {\n              if (Array.isArray(selected.eventFunc)) {\n                selected.eventFunc.forEach(function (func: Function) {\n                  attacher(\n                    self, data, lazyScope, component, wrapper, $elementTrigger,\n                    func,\n                    selected\n                  );\n                });\n              } else {\n                attacher(\n                  self, data, lazyScope, component, wrapper, $elementTrigger,\n                  selected.eventFunc,\n                  selected\n                );\n              }\n            }\n          }\n        });\n      },\n      trigger: function (target: Element, eventName: string): void {\n        const customEvent = new Event(eventName, {\n          bubbles: true,\n          cancelable: true\n        });\n        target.dispatchEvent(customEvent);\n      },\n      attacher: function (\n        self: any, // Type properly if possible\n        data: Record<string, any>,\n        lazyScope: LazyScope,\n        component: ComponentScope,\n        wrapper: DocumentFragment | Element,\n        $elementTrigger: Element,\n        eventFunc: Function | Record<string, Function>,\n        eventData: Record<string, any>\n      ): void {\n        const trigger = self.trigger;\n        const $childTarget = firstElementChild(wrapper);\n        const $targetElement =\n          childElementCount(wrapper) == 1 ? $childTarget : null;\n\n        if (!eventFunc) {\n          return;\n        }\n\n        const eventFuncParams: [Element, Event | Element | null, { data: Record<string, any>; customData: Record<string, any>; element: Element; componentElement: Element | null | undefined; component: ComponentScope }] = [\n          $elementTrigger,\n          null,\n          {\n            \"data\": data,\n            \"customData\": eventData.customData,\n            \"element\": $elementTrigger,\n            \"componentElement\": $targetElement || $childTarget?.parentElement,\n            \"component\": component,\n          },\n        ];\n\n        if (typeof eventFunc === 'function') {\n          $elementTrigger.addEventListener(\"click\", function (event: Event) {\n            event.stopPropagation();\n            eventFuncParams[1] = event;\n            try {\n              eventFunc.call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in event handler for template ${component.tmplId}:`, e, eventFunc);\n              if (configs.throwError) throw e;\n            }\n          });\n          return;\n        }\n\n        const eventMap = eventFunc as Record<string, Function>;\n        const triggerName = eventMap.triggerName as unknown as string | undefined; // Optional key to store trigger functions\n        if (triggerName) {\n          component.trigger = component.trigger || {};\n          component.trigger[triggerName] = {};\n        }\n\n        Object.keys(eventMap).forEach(function (eventType: string) {\n          if (eventType == \"load\") {\n            eventFuncParams[1] = $elementTrigger;\n            try {\n              eventMap[eventType].call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in 'load' event handler for template ${component.tmplId}:`, e, eventMap[eventType]);\n              if (configs.throwError) throw e;\n            }\n            return;\n          } else if (eventType == \"namedElement\") {\n            component[eventMap[eventType] as unknown as string] = $elementTrigger;\n            return;\n          } else if (eventType == \"triggerName\") {\n            return;\n          }\n\n          $elementTrigger.addEventListener(eventType, function (event: Event) {\n            event.stopPropagation();\n            eventFuncParams[1] = event;\n            try {\n              eventMap[eventType].call(...eventFuncParams);\n            } catch (e: any) {\n              console.error(`Error in '${eventType}' event handler for template ${component.tmplId}:`, e, eventMap[eventType]);\n              if (configs.throwError) throw e;\n            }\n          });\n\n          if (triggerName && trigger) {\n            component.trigger![triggerName][eventType] = function () {\n              trigger($elementTrigger, eventType);\n            };\n          }\n        });\n      },\n    },\n    element: {\n      pattern: /##%([\\s\\S]+?)##/g,\n      exec: function (target: string): string {\n        const elementSplitArray = target.split(\"::\");\n        const source = `';\\n(() => {\nlet elementId = (__lazyScope.elementArray.length);\n__p+='<template data-co-tmpl-element-id=\"'+elementId+'\"></template>';\n__lazyScope.elementArray[elementId] = {childTarget: ${elementSplitArray[0]}, nonblocking: ${(elementSplitArray[1] || false)}};})();\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        const self = this as TemplateRule; // Cast self\n\n        lazyScope.elementArray.forEach(function (ele: { childTarget: any; nonblocking: boolean | number }, elementId: number) {\n          const childTarget = ele.childTarget;\n          const nonblocking = ele.nonblocking;\n          const $tmplElement = wrapper.querySelector<TemplateElement>(\n            `template[data-co-tmpl-element-id=\"${elementId}\"]`\n          );\n\n          if (!$tmplElement) {\n            if (configs.debug) console.warn(`Element insertion placeholder not found for ID ${elementId} in template ${component.tmplId}`);\n            return;\n          }\n          if (!$tmplElement.parentNode) {\n            if (configs.debug) console.warn(`Element insertion placeholder for ID ${elementId} in template ${component.tmplId} has no parent.`);\n            return;\n          }\n\n          const doFunc = function () {\n            if (!$tmplElement || !$tmplElement.parentNode) {\n              if (configs.debug) console.warn(`Placeholder for ID ${elementId} removed before insertion in template ${component.tmplId}.`);\n              return;\n            }\n\n            try {\n              if (childTarget instanceof Array) {\n                const docFragment = document.createDocumentFragment();\n                childTarget.forEach(function (child: any) {\n                  if (!child) return;\n                  const childElement = child.element || child;\n                  let nodeToAppend: Node | null = null;\n\n                  if (typeof childElement === \"string\" || typeof childElement === \"number\") {\n                    nodeToAppend = stringToElement(childElement);\n                  } else if (typeof childElement === \"function\") {\n                    nodeToAppend = stringToElement(childElement());\n                  } else if (childElement instanceof Node) {\n                    nodeToAppend = childElement;\n                  } else {\n                    if (configs.debug) console.warn(`Invalid item type in element array for ID ${elementId}, template ${component.tmplId}:`, childElement);\n                    return;\n                  }\n\n                  if (child.beforeAppendTo) { try { child.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo (array item):\", e); } }\n                  if (nodeToAppend) docFragment.appendChild(nodeToAppend);\n                });\n\n                $tmplElement.parentNode.replaceChild(docFragment, $tmplElement);\n\n                childTarget.forEach(function (child: any) {\n                  if (child && child.afterAppendTo) {\n                    setTimeout(() => {\n                      try { child.afterAppendTo(); } catch (e) { console.error(\"Error in afterAppendTo (array item):\", e); }\n                    }, 0);\n                  }\n                });\n\n              } else if (typeof childTarget === \"string\" || typeof childTarget === \"number\") {\n                $tmplElement.parentNode.replaceChild(\n                  stringToElement(childTarget),\n                  $tmplElement\n                );\n              } else if (typeof childTarget === \"function\") {\n                $tmplElement.parentNode.replaceChild(\n                  stringToElement(childTarget()),\n                  $tmplElement\n                );\n              } else if (childTarget && (childTarget.element || childTarget) instanceof Node) {\n                const childScope = childTarget as ComponentScope; // Assume it might be a scope\n                const childElement = childScope.element || childScope;\n\n                if (childScope.beforeAppendTo) { try { childScope.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n                $tmplElement.parentNode.replaceChild(childElement, $tmplElement);\n                if (childScope.afterAppendTo) {\n                  setTimeout(() => {\n                    try {\n                      if (childScope.afterAppendTo) childScope.afterAppendTo();\n                    } catch (e) { console.error(\"Error in afterAppendTo:\", e); }\n                  }, 0);\n                }\n                if (childScope.tmplId) {\n                  childScope.parentComponent = component;\n                }\n\n              } else {\n                if (configs.debug) console.warn(`Invalid target for element insertion ID ${elementId}, template ${component.tmplId}:`, childTarget);\n                $tmplElement.parentNode.removeChild($tmplElement);\n              }\n            } catch (e: any) {\n              console.error(`Error during element insertion for ID ${elementId}, template ${component.tmplId}:`, e);\n              if (configs.throwError) throw e;\n              if ($tmplElement && $tmplElement.parentNode) {\n                try { $tmplElement.parentNode.removeChild($tmplElement); } catch (removeError) { /* Ignore */ }\n              }\n            }\n          }; // end doFunc\n\n          (nonblocking == undefined || nonblocking === false)\n            ? doFunc()\n            : setTimeout(doFunc, typeof nonblocking === 'number' ? nonblocking : 0);\n\n        }); // end forEach\n      }\n    },\n    lazyEvaluate: {\n      pattern: /###([\\s\\S]+?)##/g,\n      exec: function (lazyEvaluate: string): string {\n        const source = `';\\n__lazyScope.lazyEvaluateArray.push(function(data) {${lazyEvaluate}});\\n__p+='`;\n        return source;\n      },\n      lazyExec: function (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element): void {\n        const $childTarget = firstElementChild(wrapper);\n        const $targetElement =\n          childElementCount(wrapper) == 1 ? $childTarget : null;\n        lazyScope.lazyEvaluateArray.forEach(function (selectedFunc: (data: Record<string, any>) => void, idx: number) {\n          try {\n            selectedFunc.call($targetElement || wrapper, data); // Use wrapper if multiple elements\n          } catch (e: any) {\n            console.error(`Error in lazyEvaluate block ${idx} for template ${component.tmplId}:`, e, selectedFunc);\n            if (configs.throwError) throw e;\n          }\n        });\n        return;\n      },\n    },\n    evaluate: {\n      pattern: /##([\\s\\S]+?)##/g,\n      exec: (evaluate: string): string => {\n        return \"';\\n\" + evaluate + \"\\n__p+='\";\n      },\n    },\n  },\n  keys: {\n    dataKeyName: \"data\",\n    statusKeyName: \"status\",\n    componentKeyName: \"component\",\n    i18nKeyName: \"i18n\",\n  }\n\n} as TemplateConfig; // Cast to TemplateSettings\n\nconst escapeHtml = (function () {\n  const escapeMap: Record<string, string> = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\", // Use HTML entity for single quote\n    \"`\": \"&#x60;\", // Use HTML entity for backtick\n    //\"\\n\": \"&#10;\", // Keep newline escaping if needed, otherwise remove\n  };\n\n  const unescapeMap: Record<string, string> = Object.fromEntries(Object.entries(escapeMap).map(([key, value]) => [value, key]));\n\n  const createEscaper = function (map: Record<string, string>): (str: string) => string {\n    const escaper = function (match: string): string {\n      return map[match];\n    };\n    const source = `(?:${Object.keys(map).join(\"|\").replace(/\\\\/g, '\\\\\\\\')})`; // Escape backslashes if any keys have them\n    const testRegexp = RegExp(source);\n    const replaceRegexp = RegExp(source, \"g\");\n    return function (string: string | null | undefined): string {\n      string = string == null ? \"\" : `${string}`;\n      return testRegexp.test(string)\n        ? string.replace(replaceRegexp, escaper)\n        : string;\n    };\n  };\n\n  return {\n    escape: createEscaper(escapeMap),\n    unescape: createEscaper(unescapeMap),\n  };\n})();\ntools.escapeHtml = escapeHtml;\n\nconst matcherFunc = function (templateRules: Record<string, TemplateRule>): {\n  templateRules: Record<string, TemplateRule>;\n  pattern: RegExp;\n  exec: ((...args: any[]) => string)[];\n  lazyExecKeys: string[];\n  lazyExec: Record<string, (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element) => void>;\n  lazyScopeSeed: string;\n} {\n  const patternArray: string[] = [];\n  const execArray: ((...args: any[]) => string)[] = [];\n  const lazyExecMap: Record<string, (data: Record<string, any>, lazyScope: LazyScope, component: ComponentScope, wrapper: DocumentFragment | Element) => void> = {};\n  const lazyScopeSeed: Record<string, any[]> = {};\n\n  Object.keys(templateRules).forEach(function (key) {\n    const templateRule = templateRules[key] as TemplateRule | any; // Type assertion\n    if (templateRule && typeof templateRule === 'object' && templateRule.pattern instanceof RegExp && typeof templateRule.exec === 'function') {\n      patternArray.push((templateRule.pattern || noMatch).source);\n      execArray.push(templateRule.exec);\n    }\n    if (templateRule && typeof templateRule === 'object' && typeof templateRule.lazyExec === 'function') {\n      const arrayKey = `${key}Array`;\n      lazyExecMap[arrayKey] = templateRule.lazyExec;\n      lazyScopeSeed[arrayKey] = [];\n    }\n  });\n  return {\n    templateRules: templateRules,\n    pattern: new RegExp(patternArray.join(\"|\"), \"g\"),\n    exec: execArray,\n    lazyExecKeys: Object.keys(lazyScopeSeed),\n    lazyExec: lazyExecMap,\n    lazyScopeSeed: JSON.stringify(lazyScopeSeed),\n  };\n};\n\nconst escapeFunc = function (match: string): string {\n  return escapes[match] || escapes[match.replace(/[ \\n]/g, \"\")] || \"\";\n};\n\nconst defaultMatcher = matcherFunc(compomint.templateConfig.rules);\n\nconst templateParser = function (tmplId: string, text: string, matcher: ReturnType<typeof matcherFunc>): string {\n  if (configs.printExecTime) console.time(`tmpl: ${tmplId}`);\n\n  let index = 0;\n  let source = \"\";\n\n  text.replace(matcher.pattern, function (...params: any[]): string {\n    const match: string = params[0];\n    const offset: number = params[params.length - 2];\n\n    source += text.slice(index, offset).replace(escaper, escapeFunc);\n\n    let selectedMatchContent: string | undefined;\n    let matchIndex: number | null = null;\n\n    params.slice(1, -2).some(function (value: any, idx: number) {\n      if (value !== undefined) {\n        selectedMatchContent = value;\n        matchIndex = idx;\n        return true;\n      }\n      return false;\n    });\n\n    if (selectedMatchContent !== undefined && matchIndex !== null) {\n      try {\n        source += matcher.exec[matchIndex].call(matcher.templateRules, selectedMatchContent, tmplId);\n      } catch (e: any) {\n        console.error(`Error executing template rule index ${matchIndex} for match \"${selectedMatchContent}\" in template \"${tmplId}\":`, e);\n        if (configs.throwError) throw e;\n        source += '';\n      }\n    } else {\n      source += match.replace(escaper, escapeFunc);\n    }\n\n    index = offset + match.length;\n    return match;\n  });\n\n  source += text.slice(index).replace(escaper, escapeFunc);\n\n  if (configs.printExecTime) console.timeEnd(`tmpl: ${tmplId}`);\n  return source;\n};\n\n\nconst templateBuilder = (compomint.template = function compomint_templateBuilder(\n  tmplId: string,\n  templateText: string,\n  customTemplateConfig?: Partial<TemplateConfig>\n): RenderingFunction {\n  let templateConfig = compomint.templateConfig;\n  let matcher = defaultMatcher;\n\n  if (customTemplateConfig) {\n    templateConfig = Object.assign({}, compomint.templateConfig, customTemplateConfig);\n    matcher = matcherFunc(templateConfig.rules);\n  }\n\n  const source = `\n/* tmplId: ${tmplId} */\n//# sourceURL=http://tmpl//${tmplId.split(\"-\").join(\"//\")}.js\nif (__debugger) {\ndebugger;\n}\nlet __p='';\n__p+='${templateParser(tmplId, templateText, matcher)}';\nreturn __p;`;\n\n  let sourceGenFunc: Function | null = null;\n\n  try {\n    sourceGenFunc = new Function(\n      templateConfig.keys.dataKeyName as string,\n      templateConfig.keys.statusKeyName as string,\n      templateConfig.keys.componentKeyName as string,\n      templateConfig.keys.i18nKeyName as string,\n      \"compomint\",\n      \"tmpl\",\n      \"__lazyScope\",\n      \"__debugger\",\n      source\n    );\n  } catch (e: any) {\n    if (configs.throwError) {\n      console.error(`Template compilation error in \"${tmplId}\", ${e.name}: ${e.message}`);\n      try { // Attempt re-run for potential browser debugging\n        new Function(\n          templateConfig.keys.dataKeyName as string, templateConfig.keys.statusKeyName as string, templateConfig.keys.componentKeyName as string,\n          templateConfig.keys.i18nKeyName as string, \"compomint\", \"tmpl\", \"__lazyScope\", \"__debugger\", source\n        );\n      } catch { /* Ignore re-run error */ }\n      throw e;\n    } else {\n      return (() => ({} as ComponentScope)); // Return a dummy function if not throwing\n    }\n  }\n\n  const renderingFunc: RenderingFunction = function compomint_renderingFuncBuilder(...params): ComponentScope {\n    let data: Record<string, any>;\n    let wrapperElement: Element | undefined;\n    let callback: ((component: ComponentScope) => void) | undefined;\n    let baseComponent: Partial<ComponentScope> | undefined;\n\n    // Argument parsing logic\n    const firstArg = params[0];\n    if (firstArg && typeof firstArg === 'object' && (firstArg.$wrapperElement || firstArg.$callback || firstArg.$baseComponent)) {\n      data = { ...firstArg }; // Clone data object\n      wrapperElement = data.$wrapperElement; delete data.$wrapperElement;\n      callback = data.$callback; delete data.$callback;\n      baseComponent = data.$baseComponent; delete data.$baseComponent;\n    } else {\n      data = firstArg;\n      if (typeof params[1] === 'function') {\n        wrapperElement = undefined;\n        callback = params[1] as ((component: ComponentScope) => void);\n        baseComponent = params[2];\n      } else {\n        wrapperElement = params[1];\n        callback = params[2];\n        baseComponent = params[3];\n      }\n    }\n\n\n    const dataKeyName = templateConfig.keys.dataKeyName as string;\n    const statusKeyName = templateConfig.keys.statusKeyName as string;\n    const lazyScope: LazyScope = JSON.parse(matcher.lazyScopeSeed);\n\n    const component: ComponentScope = Object.assign(baseComponent || {}, {\n      tmplId: tmplId,\n      element: null as any, // Initialize element\n      status: (baseComponent && baseComponent.status) || {}, // Ensure status exists\n      replace: function (newComponent: ComponentScope | Element): void {\n        const self = this as ComponentScope;\n        if (!self.element || !(self.element instanceof Node) || !self.element.parentElement) {\n          if (configs.debug) console.warn(`Cannot replace template \"${tmplId}\": element not in DOM.`);\n          return;\n        }\n        self.element.parentElement.replaceChild(\n          (newComponent as ComponentScope).element || newComponent as Element,\n          self.element as Node\n        );\n      },\n      remove: function (spacer: boolean = false): Element | TemplateElement | Comment | DocumentFragment {\n        const self = this as ComponentScope;\n        if (self.beforeRemove) { try { self.beforeRemove(); } catch (e) { console.error(\"Error in beforeRemove:\", e); } }\n\n        const parent = (self.element instanceof Node) ? self.element.parentElement : null;\n        let removedElement: Element | TemplateElement | Comment | DocumentFragment = self.element; // Store reference\n\n        if (parent) {\n          if (spacer) {\n            const dumy = document.createElement(\"template\");\n            parent.replaceChild(dumy, self.element as Node);\n            self.element = dumy; // Update scope's element reference\n          } else {\n            parent.removeChild(self.element as Node);\n          }\n        } else if (configs.debug) {\n          console.warn(`Cannot remove template \"${tmplId}\": element not in DOM.`);\n        }\n\n        if (self.afterRemove) { try { self.afterRemove(); } catch (e) { console.error(\"Error in afterRemove:\", e); } }\n        return removedElement;\n      },\n      appendTo: function (parentElement: Element): ComponentScope {\n        const self = this as ComponentScope;\n        if (self.beforeAppendTo) { try { self.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n\n        if (parentElement && self.element instanceof Node) {\n          parentElement.appendChild(self.element);\n        } else if (configs.debug) {\n          console.warn(`Cannot append template \"${tmplId}\": parentElement or scope.element is missing or not a Node.`);\n        }\n\n        if (self.afterAppendTo) {\n          setTimeout(() => { try { self.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0);\n        }\n        return self;\n      },\n      release: function (): void { /* Implementation below */ },\n      render: function (newData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n      refresh: function (reflashData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n      reflash: function (reflashData: Record<string, any>): ComponentScope { /* Implementation below */ return this; },\n    } as ComponentScope); // Cast to ComponentScope\n\n    if (!component._id) {\n      component._id = tools.genId(tmplId);\n    }\n    component[dataKeyName] = data;\n    if (component[statusKeyName] == undefined) {\n      component[statusKeyName] = {};\n    }\n\n    const hasParent = wrapperElement instanceof Element;\n    const temp = document.createElement(\"template\");\n    let returnTarget: Node | null = null;\n\n    if (configs.printExecTime) console.time(`render: ${tmplId}`);\n\n    let renderedHTML: string | null = null;\n    try {\n      renderedHTML = !data\n        ? `<template data-co-empty-template=\"${tmplId}\"></template>`\n        : sourceGenFunc!.call( // Use non-null assertion\n          wrapperElement || null,\n          data,\n          component[statusKeyName],\n          component,\n          compomint.i18n[tmplId],\n          compomint,\n          tmpl,\n          lazyScope,\n          configs.debug // Pass debug flag for __debugger\n        );\n    } catch (e: any) {\n      if (configs.throwError) {\n        console.error(`Runtime error during render of \"${tmplId}\":`, e.message);\n        console.log(\"--- Data ---\", data, \"------------\");\n        try { // Attempt re-run with debugger\n          sourceGenFunc!.call(wrapperElement || null, data, component[statusKeyName], component, compomint.i18n[tmplId], lazyScope, true);\n        } catch { /* Ignore */ }\n        throw e;\n      } else {\n        console.warn(`Render failed for \"${tmplId}\". Returning scope with comment node.`);\n        component.element = document.createComment(`Render Error: ${tmplId}`) as any;\n        return component;\n      }\n    }\n    if (configs.printExecTime) console.timeEnd(`render: ${tmplId}`);\n\n    temp.innerHTML = renderedHTML!;\n    let docFragment: DocumentFragment | Element | TemplateElement = temp.content || temp;\n\n    if ((docFragment as any).tagName == \"TEMPLATE\" && !(temp as any).content) { // Check for IE11 case\n      const children = Array.from(docFragment.childNodes);\n      docFragment = document.createDocumentFragment();\n      children.forEach(child => docFragment.appendChild(child));\n    }\n\n    const lazyExec = matcher.lazyExec;\n    if (data) {\n      matcher.lazyExecKeys.forEach(function (key) {\n\n        if (lazyScope[key] && lazyScope[key].length > 0) {\n          try {\n            lazyExec[key].call(templateConfig.rules[key.slice(0, -5)], data, lazyScope, component, docFragment as DocumentFragment | Element); // Cast needed\n          } catch (e: any) {\n            if (configs.throwError) {\n              console.error(`Error during lazy execution of \"${key}\" for template \"${tmplId}\":`, e);\n              throw e;\n            }\n          }\n        }\n      });\n    }\n\n    if (hasParent && wrapperElement) {\n      while (wrapperElement.firstChild) {\n        wrapperElement.removeChild(wrapperElement.firstChild);\n      }\n      component.wrapperElement = wrapperElement;\n    }\n\n    // Handle shadow DOM creation\n    const shadowStyle = (docFragment as any).querySelector ? (docFragment as any).querySelector(\"style\") : null;\n    if (shadowStyle && (docFragment as any).querySelector) { // Check if querySelector exists\n      const host = document.createElement(tmplId); // Use tmplId as host tag name\n      try {\n        const shadow = host.attachShadow({ mode: \"open\" });\n        while (docFragment.firstChild) {\n          shadow.appendChild(docFragment.firstChild);\n        }\n        docFragment = host; // Replace fragment with the host element\n      } catch (e) {\n        console.error(`Failed to attach shadow DOM for template \"${tmplId}\":`, e);\n        // Proceed without shadow DOM if attachShadow fails\n      }\n    }\n\n\n    if (docFragment.firstChild && docFragment.firstChild.nodeType == 8) {\n      returnTarget = docFragment.firstChild;\n    } else if (childElementCount(docFragment) == 1) {\n      returnTarget = firstElementChild(docFragment);\n      if (hasParent && wrapperElement && returnTarget) {\n        if (component.beforeAppendTo) { try { component.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n        wrapperElement.appendChild(returnTarget);\n        if (component.afterAppendTo) { setTimeout(() => { try { component.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0); }\n      }\n    } else {\n      if (hasParent && wrapperElement) {\n        if (component.beforeAppendTo) { try { component.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo:\", e); } }\n        wrapperElement.appendChild(docFragment);\n        if (component.afterAppendTo) { setTimeout(() => { try { component.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo:\", e); } }, 0); }\n        returnTarget = wrapperElement;\n      } else {\n        returnTarget = docFragment;\n      }\n    }\n\n    if (data && data.$props && returnTarget instanceof Element) {\n      for (const prop in data.$props) {\n        try {\n          const value = data.$props[prop];\n          if (prop.startsWith('data-')) {\n            const camelCased = prop.substring(5).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n            (returnTarget as HTMLElement).dataset[camelCased] = String(value);\n          } else if (prop in returnTarget) {\n            (returnTarget as any)[prop] = value;\n          } else {\n            returnTarget.setAttribute(prop, String(value));\n          }\n        } catch (e: any) {\n          console.error(`Error applying prop \"${prop}\" to element in template \"${tmplId}\":`, e);\n        }\n      }\n    }\n\n    if (returnTarget instanceof Node && returnTarget.normalize) {\n      returnTarget.normalize();\n    }\n    if (returnTarget instanceof Node) {\n      cleanNode(returnTarget);\n    }\n    component.element = returnTarget as HTMLElement | TemplateElement; // Assign final element/fragment\n\n    if (tools.liveReloadSupport) {\n      try { tools.liveReloadSupport(component); } catch (e) { console.error(\"Error in liveReloadSupport:\", e); }\n    }\n\n    if (callback) {\n      try {\n        callback.call(wrapperElement || null, component);\n      } catch (e: any) {\n        console.error(`Error in template callback for \"${tmplId}\":`, e);\n        if (configs.throwError) throw e;\n      }\n    }\n\n    // Define Component Methods (Render/Refresh/Release)\n    component.release = function (): void {\n      const self = this as ComponentScope;\n      const props = Object.getOwnPropertyNames(self);\n      const keepProps = [statusKeyName, '_id'];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (typeof (self as any)[prop] !== 'function' && !keepProps.includes(prop)) {\n          delete (self as any)[prop];\n        }\n      }\n    };\n\n    component.render = function (newData: Record<string, any>): ComponentScope {\n      const currentComponent = this as ComponentScope;\n      const targetElement = currentComponent.element;\n      const parent = (targetElement instanceof Node) ? targetElement.parentElement : null;\n      const wrapper = currentComponent.wrapperElement;\n      const tmplFunc = compomint.tmpl(currentComponent.tmplId);\n\n      if (!tmplFunc) {\n        console.error(`Cannot re-render: Template function for \"${currentComponent.tmplId}\" not found.`);\n        return currentComponent;\n      }\n\n      const hooks = {\n        beforeAppendTo: currentComponent.beforeAppendTo, afterAppendTo: currentComponent.afterAppendTo,\n        beforeRemove: currentComponent.beforeRemove, afterRemove: currentComponent.afterRemove,\n        beforeRefresh: currentComponent.beforeRefresh, afterRefresh: currentComponent.afterRefresh\n      };\n\n      if (currentComponent.beforeRemove) { try { currentComponent.beforeRemove(); } catch (e) { console.error(\"Error in beforeRemove during render:\", e); } }\n\n      let newComponent: ComponentScope;\n      if (wrapper) {\n        newComponent = tmplFunc(newData, wrapper, undefined, currentComponent); // Reuse scope object\n      } else if (parent && targetElement instanceof Node) {\n        newComponent = tmplFunc(newData, undefined, undefined, currentComponent); // Reuse scope object\n        if (newComponent.element instanceof Node) {\n          if (newComponent.beforeAppendTo) { try { newComponent.beforeAppendTo(); } catch (e) { console.error(\"Error in beforeAppendTo during render:\", e); } }\n          parent.replaceChild(newComponent.element, targetElement);\n          if (newComponent.afterAppendTo) { setTimeout(() => { try { newComponent.afterAppendTo!(); } catch (e) { console.error(\"Error in afterAppendTo during render:\", e); } }, 0); }\n        } else if (configs.debug) {\n          console.warn(`Re-render of \"${currentComponent.tmplId}\" resulted in no element or target was missing.`);\n        }\n      } else {\n        // No parent, just create new scope (likely detached)\n        newComponent = tmplFunc(newData, undefined, undefined, currentComponent);\n      }\n\n      if (currentComponent.afterRemove) { try { currentComponent.afterRemove(); } catch (e) { console.error(\"Error in afterRemove during render:\", e); } }\n\n      Object.assign(newComponent, hooks); // Restore hooks\n      return newComponent;\n    };\n\n    component.refresh = function (reflashData: Record<string, any>): ComponentScope {\n      const currentComponent = this as ComponentScope;\n      const currentData = currentComponent[dataKeyName];\n      if (currentComponent.beforeRefresh) { try { currentComponent.beforeRefresh(); } catch (e) { console.error(\"Error in beforeRefresh:\", e); } }\n      const newData = Object.assign({}, currentData || {}, reflashData);\n      const newComponent = currentComponent.render(newData);\n      if (currentComponent.afterRefresh) { try { currentComponent.afterRefresh(); } catch (e) { console.error(\"Error in afterRefresh:\", e); } }\n      return newComponent;\n    };\n\n    component.reflash = component.refresh;\n\n    return component;\n  }; // End of renderingFunc definition\n\n  Object.defineProperty(renderingFunc, \"name\", { value: `render_${tmplId}`, writable: false });\n\n  if (tmplId) {\n    const tmplMeta: TemplateMeta = configs.debug ? {\n      renderingFunc: renderingFunc,\n      source: escapeHtml.escape(`function ${tmplId}_source (${templateConfig.keys.dataKeyName}, ${templateConfig.keys.statusKeyName}, ${templateConfig.keys.componentKeyName}, ${templateConfig.keys.i18nKeyName}, __lazyScope, __debugger) {\\n${source}\\n}`),\n      templateText: escapeHtml.escape(templateText),\n    } : {\n      renderingFunc: renderingFunc,\n    };\n    cachedTmpl.set(tmplId, tmplMeta);\n\n    const tmplIdNames = tmplId.split(\"-\");\n    if (tmplIdNames.length > 1) {\n      const group = tmplIdNames[0];\n      let groupObj = tmpl[group];\n      if (!groupObj) {\n        tmpl[group] = groupObj = {};\n      }\n      const tmplIdSub = tmplIdNames\n        .slice(1)\n        .map((part, index) => index === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1))\n        .join('');\n      groupObj[tmplIdSub] = tmplMeta.renderingFunc;\n    }\n  }\n  return renderingFunc;\n}); // End of templateBuilder\n\ncompomint.remapTmpl = function (json: Record<string, string>): void {\n  Object.keys(json).forEach(function (oldKey: string) {\n    const newKey = json[oldKey];\n    const meta = cachedTmpl.get(oldKey);\n    if (meta) {\n      cachedTmpl.set(newKey, meta);\n      if (configs.debug) console.log(`Remapped template \"${oldKey}\" to \"${newKey}\"`);\n    } else if (configs.debug) {\n      console.warn(`Cannot remap template: Old key \"${oldKey}\" not found in cache.`);\n    }\n  });\n};\n\ncompomint.tmpl = function (tmplId: string): RenderingFunction | null {\n  const tmplMeta = cachedTmpl.get(tmplId);\n  return tmplMeta ? tmplMeta.renderingFunc : null;\n};\n\nconst safeTemplate = function (source: Element | string): Element | TemplateElement {\n  let template: TemplateElement;\n  if (source instanceof Element) {\n    if (source.tagName === 'TEMPLATE') return source as TemplateElement;\n    return source; // Assume it's a container element\n  } else if (typeof source !== 'string') {\n    if (configs.debug) console.warn(\"safeTemplate received non-string/non-element source:\", source);\n    source = '';\n  }\n\n  template = document.createElement(\"template\");\n  if (isSupportTemplateTag) {\n    const encodedSource = source.replace(\n      /<(?!template|\\/template|body|\\/body|html|\\/html|head|\\/head|style|\\/style|script|\\/script|link|\\/link|meta|\\/meta|!--)/gi,\n      \"&lt;\"\n    );\n    template.innerHTML = encodedSource;\n  } else {\n    const encodedSource = source\n      .replace(\n        /<(?!template|\\/template|body|\\/body|html|\\/html|head|\\/head|style|\\/style|script|\\/script|link|\\/link|meta|\\/meta|!--)/gi,\n        \"&lt;\"\n      )\n      .replace(/<template/g, '<script type=\"template\"')\n      .replace(/<\\/template>/g, \"</script>\");\n    template.innerHTML = encodedSource;\n  }\n  return template;\n};\n\nconst addTmpl = (compomint.addTmpl = function (tmplId: string, element: Element | string, templateConfig?: Partial<TemplateConfig>): RenderingFunction {\n  let templateText = element instanceof Element ? element.innerHTML : String(element);\n  templateText = escapeHtml.unescape(templateText.replace(/<!---|--->/gi, \"\"));\n  return templateBuilder(tmplId, templateText, templateConfig);\n});\n\nconst addTmpls = (compomint.addTmpls = function (\n  source: Element | string,\n  removeInnerTemplate?: boolean | Partial<TemplateConfig>,\n  templateConfig?: Partial<TemplateConfig>\n): Element | TemplateElement {\n  if (typeof removeInnerTemplate !== \"boolean\" && templateConfig == undefined) {\n    templateConfig = removeInnerTemplate as Partial<TemplateConfig> | undefined;\n    removeInnerTemplate = false;\n  } else {\n    removeInnerTemplate = !!removeInnerTemplate;\n  }\n\n  const container = safeTemplate(source);\n  const content = (container as TemplateElement).content || container; // Use content if available\n  const tmplNodes = content.querySelectorAll<Element>(\n    'template[id], script[type=\"text/template\"][id], script[type=\"text/compomint\"][id]'\n  );\n\n  tmplNodes.forEach(node => {\n    const tmplId = node.id;\n    if (!tmplId) return;\n\n    if ((node as HTMLElement).dataset.coLoadScript !== undefined) {\n      addTmpl(tmplId, node, templateConfig)({}); // Execute immediately if data-co-load-script\n    } else {\n      addTmpl(tmplId, node, templateConfig);\n    }\n\n    if (removeInnerTemplate && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n  return container;\n});\n\nconst addTmplByUrl = (compomint.addTmplByUrl = function compomint_addTmplByUrl(\n  importData: string | any[] | { url: string; option?: Record<string, any> },\n  option?: Record<string, any> | (() => void),\n  callback?: Function | (() => void)\n): void {\n  if (!callback && typeof option === \"function\") {\n    callback = option;\n    option = {};\n  }\n\n  const defaultOptions = {\n    loadScript: true, loadStyle: true, loadLink: true, templateConfig: undefined\n  };\n  const mergedOptions = Object.assign({}, defaultOptions, option as Record<string, any>); // Ensure option is object\n\n  const importDataParser = (obj: string | any): { url: string; option: Record<string, any> } | null => {\n    if (typeof obj === \"string\") {\n      return { url: obj, option: mergedOptions };\n    } else if (obj && typeof obj === 'object' && obj.url) {\n      return { url: obj.url, option: Object.assign({}, mergedOptions, obj.option) };\n    } else {\n      console.error(\"Invalid import data format in addTmplByUrl:\", obj);\n      return null;\n    }\n  };\n\n  const appendElements = (elements: NodeListOf<Element> | Element[]): void => {\n    elements.forEach(element => {\n      if (!element) return;\n      if (element.id) {\n        const oldElement = document.getElementById(element.id);\n        if (oldElement) oldElement.parentNode?.removeChild(oldElement);\n      }\n      if (element.tagName === 'SCRIPT' || element.tagName === 'LINK' || element.tagName === 'STYLE') {\n        document.head.appendChild(element);\n      } else {\n        document.body.appendChild(element);\n      }\n    });\n  };\n\n  const importFunc = (source: string, currentOption: Record<string, any>): void => {\n    const templateContainer = safeTemplate(source);\n    addTmpls(templateContainer, false, currentOption.tmplSettings);\n    const content = (templateContainer as TemplateElement).content || templateContainer;\n\n    if (currentOption.loadLink) {\n      const links = content.querySelectorAll<HTMLLinkElement>('link[rel=\"stylesheet\"]');\n      appendElements(links);\n    }\n    if (currentOption.loadStyle) {\n      const styles = content.querySelectorAll<HTMLStyleElement>(\"style[id]\");\n      appendElements(styles);\n    }\n    if (currentOption.loadScript) {\n      const scripts = content.querySelectorAll<HTMLScriptElement>(\n        'script:not([type]), script[type=\"text/javascript\"], script[type=\"module\"]'\n      );\n      const executableScripts = Array.from(scripts)\n        .filter(node => {\n          let parent = node.parentNode;\n          while (parent) {\n            if (parent.nodeName === 'TEMPLATE' || (parent.nodeName === 'SCRIPT' && (parent as HTMLScriptElement).type.includes('template'))) return false;\n            parent = parent.parentNode;\n          }\n          return true;\n        })\n        .map(node => {\n          const scriptElm = document.createElement(\"script\");\n          node.getAttributeNames().forEach(name => scriptElm.setAttribute(name, node.getAttribute(name)!));\n          if (node.innerHTML) scriptElm.textContent = node.innerHTML;\n          return scriptElm;\n        });\n      appendElements(executableScripts);\n    }\n  };\n\n  const loadResource = (dataItem: string | any): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      const parsedData = importDataParser(dataItem);\n      if (!parsedData) {\n        resolve(); // Resolve immediately for invalid data\n        return;\n      }\n      const src = parsedData.url;\n      const currentOption = parsedData.option;\n\n      if (src.endsWith(\".js\")) {\n        const script = genElement(\"script\", { async: true, src: src }) as HTMLScriptElement;\n        //script.onload = () => resolve();\n        script.onerror = () => { console.error(`Failed to load script: ${src}`); }; // Resolve even on error\n        document.head.appendChild(script);\n        resolve();\n      } else if (src.endsWith(\".css\")) {\n        const link = genElement(\"link\", { type: \"text/css\", rel: \"stylesheet\", href: src }) as HTMLLinkElement;\n        //link.onload = () => resolve(); // CSS load might be unreliable\n        link.onerror = () => { console.error(`Failed to load stylesheet: ${src}`); }; // Resolve even on error\n        document.head.appendChild(link);\n        resolve();\n        // Resolve slightly early for CSS? Or rely on potential browser caching?\n        // For simplicity, let's resolve on load/error.\n      } else {\n        requestFunc(src, null, (source, status) => {\n          if (status === 200 || status === 0) {\n            try {\n              importFunc(source!, currentOption); // Use non-null assertion for source\n            } catch (e) {\n              console.error(`Error processing imported HTML from ${src}:`, e);\n            }\n          } else {\n            console.error(`Failed to fetch template file: ${src} (Status: ${status})`);\n          }\n          resolve(); // Resolve after processing or error\n        });\n      }\n    });\n  };\n\n  const finalCallback = callback || (() => { }); // Ensure callback is a function\n\n  if (Array.isArray(importData)) {\n    if (importData.length === 0) {\n      finalCallback();\n      return;\n    }\n    Promise.all(importData.map(loadResource)).then(finalCallback as ((value: void[]) => void[] | PromiseLike<void[]>)).catch(err => {\n      console.error(\"Error loading resources in addTmplByUrl:\", err);\n      finalCallback(); // Call callback even if some resources failed\n    });\n  } else {\n    loadResource(importData).then(finalCallback as ((value: void) => void[] | PromiseLike<void[]>)).catch(err => {\n      console.error(\"Error loading resource in addTmplByUrl:\", err);\n      finalCallback(); // Call callback even if resource failed\n    });\n  }\n});\n\nconst requestFunc = function (url: string, option: RequestInit | null, callback: (responseText: string | null, status: number, xhr: XMLHttpRequest) => void): void {\n  const xmlhttp = new XMLHttpRequest();\n\n  xmlhttp.onreadystatechange = function () {\n    if (xmlhttp.readyState == XMLHttpRequest.DONE) {\n      if (xmlhttp.status == 200 || xmlhttp.status === 0) {\n        callback(xmlhttp.responseText, xmlhttp.status, xmlhttp);\n      } else {\n        if (xmlhttp.status == 404) console.error(`Error 404: Not Found - ${url}`);\n        else if (xmlhttp.status >= 400) console.error(`HTTP Error ${xmlhttp.status} for ${url}`);\n        else console.error(`Request failed for ${url}`, xmlhttp.statusText);\n        callback(null, xmlhttp.status, xmlhttp);\n      }\n    }\n  };\n\n  xmlhttp.onerror = function () {\n    console.error(`Network error requesting ${url}`);\n    callback(null, 0, xmlhttp);\n  };\n  xmlhttp.ontimeout = function () {\n    console.error(`Request timed out for ${url}`);\n    callback(null, 408, xmlhttp);\n  };\n\n  try {\n    const method = (option && (option as any).method) || \"GET\";\n    xmlhttp.open(method, url, true);\n\n    if (option) {\n      if ((option as any).timeout) xmlhttp.timeout = (option as any).timeout;\n      if (option.headers) {\n        Object.entries(option.headers).forEach(([key, value]) => {\n          xmlhttp.setRequestHeader(key, value);\n        });\n      }\n      xmlhttp.send(option.body as any || null);\n    } else {\n      xmlhttp.send();\n    }\n  } catch (e: any) {\n    console.error(`Error sending request to ${url}:`, e);\n    callback(null, 0, xmlhttp);\n  }\n};\n\ncompomint.i18n = {};\n\ncompomint.addI18n = function (fullKey: string, i18nObj: Record<string, any>): void {\n  if (!fullKey || typeof fullKey !== 'string' || !i18nObj || typeof i18nObj !== 'object') {\n    console.error(\"Invalid arguments for addI18n:\", fullKey, i18nObj);\n    return;\n  }\n\n  const langKeyNames = fullKey.split(\".\");\n  let target: any = compomint.i18n;\n  const keyLength = langKeyNames.length - 1;\n\n  langKeyNames.forEach(function (key: string, i: number) {\n    if (!key) return;\n\n    if (keyLength === i) {\n      if (!target[key]) {\n        target[key] = function (defaultText?: string): string {\n          const lang = document.documentElement.lang || 'en';\n          let label = i18nObj[lang];\n          if (label === undefined || label === null) {\n            label = defaultText;\n            if (configs.debug) console.warn(`i18n: Label key [\"${fullKey}\"] for lang \"${lang}\" is missing. Using default: \"${defaultText}\"`);\n          }\n          return label !== undefined && label !== null ? String(label) : '';\n        };\n      }\n      // Handle nested objects within the language definitions\n      Object.keys(i18nObj)\n        .filter((lang) => i18nObj[lang] instanceof Object && !Array.isArray(i18nObj[lang])) // Check for plain objects\n        .forEach((subKey) => {\n          compomint.addI18n(fullKey + \".\" + subKey, i18nObj[subKey]);\n          // delete i18nObj[subKey]; // Avoid deleting if it's also a language key\n        });\n    } else {\n      if (!target[key]) {\n        target[key] = {};\n      }\n      target = target[key];\n    }\n  });\n};\n\ncompomint.addI18ns = function (i18nObjs: Record<string, any>): void {\n  Object.keys(i18nObjs || {}).forEach(function (key) {\n    compomint.addI18n(key, i18nObjs[key]);\n  });\n};\n\nlet elementCount = 0;\ntools.genId = function (tmplId: string): string {\n  elementCount++;\n  return tmplId + elementCount;\n};\n\nconst genElement = (tools.genElement = function (\n  tagName: string,\n  attrs: Record<string, any> | string | Node | (string | Node)[] = {},\n  ...children: (string | Node)[]\n): Element {\n  const element = document.createElement(tagName);\n  let actualAttrs: Record<string, any> = {};\n\n  if (typeof attrs === 'string') {\n    children.unshift(attrs); // Prepend string as first child\n  } else if (attrs instanceof Node) {\n    children.unshift(attrs); // Prepend Node as first child\n  } else if (Array.isArray(attrs)) {\n    children = attrs.concat(children); // Concatenate arrays\n  } else {\n    actualAttrs = attrs; // It's an attributes object\n  }\n\n  // Set attributes/properties\n  Object.keys(actualAttrs).forEach(function (key) {\n    const value = actualAttrs[key];\n    const propName = key === 'class' ? 'className' : key;\n\n    try {\n      if (key === 'style' && typeof value === 'object' && value !== null) {\n        Object.assign(element.style, value); // Assign style object\n      } else if (key === 'dataset' && typeof value === 'object' && value !== null) {\n        Object.assign((element as HTMLElement).dataset, value); // Assign dataset object\n      } else if (key.startsWith('on') && typeof value === 'function') {\n        // Directly assign event handlers like onclick, onmouseover\n        (element as any)[key.toLowerCase()] = value;\n      } else if (propName in element) {\n        (element as any)[propName] = value;\n      } else {\n        element.setAttribute(key, String(value));\n      }\n    } catch (e: any) {\n      console.error(`Error setting attribute/property \"${key}\" on <${tagName}>:`, e);\n    }\n  });\n\n  // Append children\n  children.forEach(child => {\n    if (typeof child === 'string') {\n      element.appendChild(document.createTextNode(child));\n    } else if (child instanceof Node) {\n      element.appendChild(child);\n    }\n  });\n  return element;\n});\n\ntools.props = function (...propsObjects: Record<string, any>[]): string {\n  if (!propsObjects || propsObjects.length === 0) return \"\";\n  const mergedProps = Object.assign({}, ...propsObjects);\n  const propStrArray: string[] = [];\n  Object.keys(mergedProps).forEach(function (key) {\n    const value = mergedProps[key];\n    if (value || value === 0) {\n      const escapedValue = String(value).replace(/\"/g, '&quot;');\n      propStrArray.push(`${key}=\"${escapedValue}\"`);\n    }\n  });\n  return propStrArray.join(\" \");\n};\n\n// Add built-in components\naddTmpl(\"co-Ele\", `##%compomint.tools.genElement(data[0], data[1])##`);\naddTmpl(\n  \"co-Element\",\n  `##\n  data.tag = data.tag || 'div';\n  ##\n  &lt;##=data.tag##\n    ##=data.id ? 'id=\"' + (data.id === true ? component._id : data.id) + '\"' : ''##\n    data-co-props=\"##:data.props##\"\n    data-co-event=\"##:data.event##\"&gt;\n    ##if (typeof data.content === \"string\") {##\n    ##=data.content##\n    ##} else {##\n      ##%data.content##\n    ##}##\n  &lt;/##=data.tag##&gt;`\n);\n\n\nexport { compomint, tmpl, CompomintGlobal };"],"names":["Object","assign","defineProperty","value","target","params","TypeError","to","index","length","nextSource","nextKey","prototype","hasOwnProperty","call","writable","configurable","Element","CharacterData","DocumentType","forEach","item","enumerable","this","parentNode","removeChild","window","Node","get","document","body","contains","compomint","tmpl","tools","configs","printExecTime","debug","throwError","domParser","DOMParser","cachedTmpl","tmplCache","Map","has","set","elements","Set","isSupportTemplateTag","createElement","noMatch","escapes","escaper","firstElementChild","ele","children","childNodes","i","size","childElementCount","Array","filter","child","cleanNode","node","n","nodeType","test","nodeValue","stringToElement","str","isNaN","Number","createTextNode","String","parseFromString","firstChild","fragment","createDocumentFragment","appendChild","e","templateConfig","rules","style","pattern","exec","dumy","innerHTML","styleNode","content","querySelector","id","oldStyleNode","getElementById","head","commentArea","preEvaluate","tmplId","Function","console","error","name","message","warn","interpolate","escape","elementProps","props","lazyExec","data","lazyScope","component","wrapper","elementPropsArray","eventId","$elementTrigger","dataset","coProps","keys","key","setAttribute","namedElement","namedElementArray","coNamedElement","elementRef","elementRefArray","func","coElementRef","elementLoad","elementLoadSplitArray","split","elementLoadArray","coLoad","loadFunc","element","customData","event","eventStrArray","source","eventArray","eventSplitArray","push","join","self","attacher","selectedArray","coEvent","selected","eventFunc","isArray","trigger","eventName","customEvent","Event","bubbles","cancelable","dispatchEvent","eventData","$childTarget","$targetElement","eventFuncParams","componentElement","parentElement","addEventListener","stopPropagation","eventMap","triggerName","eventType","elementSplitArray","elementArray","elementId","childTarget","nonblocking","$tmplElement","doFunc","docFragment","childElement","nodeToAppend","beforeAppendTo","replaceChild","afterAppendTo","setTimeout","childScope","parentComponent","removeError","undefined","lazyEvaluate","lazyEvaluateArray","selectedFunc","idx","evaluate","dataKeyName","statusKeyName","componentKeyName","i18nKeyName","escapeHtml","escapeMap","unescapeMap","fromEntries","entries","map","createEscaper","match","replace","testRegexp","RegExp","replaceRegexp","string","unescape","matcherFunc","templateRules","patternArray","execArray","lazyExecMap","lazyScopeSeed","templateRule","arrayKey","lazyExecKeys","JSON","stringify","escapeFunc","defaultMatcher","templateBuilder","template","templateText","customTemplateConfig","matcher","text","time","offset","selectedMatchContent","slice","matchIndex","some","timeEnd","templateParser","sourceGenFunc","renderingFunc","wrapperElement","callback","baseComponent","firstArg","$wrapperElement","$callback","$baseComponent","parse","status","newComponent","remove","spacer","beforeRemove","parent","removedElement","afterRemove","appendTo","release","render","newData","refresh","reflashData","reflash","_id","genId","hasParent","temp","returnTarget","renderedHTML","i18n","log","createComment","tagName","from","host","shadow","attachShadow","mode","$props","prop","startsWith","camelCased","substring","g","toUpperCase","normalize","liveReloadSupport","getOwnPropertyNames","keepProps","includes","currentComponent","targetElement","tmplFunc","hooks","beforeRefresh","afterRefresh","currentData","tmplMeta","tmplIdNames","group","groupObj","part","charAt","remapTmpl","json","oldKey","newKey","meta","safeTemplate","encodedSource","addTmpl","addTmpls","removeInnerTemplate","container","querySelectorAll","coLoadScript","addTmplByUrl","importData","option","defaultOptions","loadScript","loadStyle","loadLink","mergedOptions","appendElements","oldElement","loadResource","dataItem","Promise","resolve","reject","parsedData","obj","url","src","currentOption","endsWith","script","genElement","async","onerror","link","type","rel","href","requestFunc","templateContainer","tmplSettings","links","styles","scripts","executableScripts","nodeName","scriptElm","getAttributeNames","getAttribute","textContent","importFunc","finalCallback","all","then","catch","err","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","DONE","responseText","statusText","ontimeout","method","open","timeout","headers","setRequestHeader","send","addI18n","fullKey","i18nObj","langKeyNames","keyLength","defaultText","lang","documentElement","label","subKey","addI18ns","i18nObjs","elementCount","attrs","actualAttrs","unshift","concat","propName","toLowerCase","propsObjects","mergedProps","propStrArray","escapedValue"],"mappings":"iPA8J4B,mBAAjBA,OAAOC,QAChBD,OAAOE,eAAeF,OAAQ,SAAU,CACtCG,MAAO,SAAgBC,KAAgBC,GACrC,GAAc,MAAVD,EACF,MAAM,IAAIE,UAAU,8CAEtB,IAAIC,EAAKP,OAAOI,GAChB,IAAK,IAAII,EAAQ,EAAGC,EAASJ,EAAOI,OAAQD,EAAQC,EAAQD,IAAS,CACnE,IAAIE,EAAaL,EAAOG,GACxB,GAAkB,MAAdE,EACF,IAAK,IAAIC,KAAWD,EACdV,OAAOY,UAAUC,eAAeC,KAAKJ,EAAYC,KACnDJ,EAAGI,GAAWD,EAAWC,GAIhC,CACD,OAAOJ,CACR,EACDQ,UAAU,EACVC,cAAc,IAqBf,CAACC,QAAQL,UAAWM,cAAcN,UAAWO,aAAaP,WAfvDQ,SAAQ,SAAUC,GACfA,IAAQA,EAAKR,eAAe,WAGjCb,OAAOE,eAAemB,EAAM,SAAU,CACpCL,cAAc,EACdM,YAAY,EACZP,UAAU,EACVZ,MAAO,WACmB,OAApBoB,KAAKC,YACPD,KAAKC,WAAWC,YAAYF,KAE/B,GAEL,IAWC,gBAAiBG,OAAOC,KAAKf,WAL9BZ,OAAOE,eAAewB,OAAOC,KAAKf,UAAW,cAAe,CAC1DgB,IAAK,WACH,OAAOC,SAASC,KAAKC,SAASR,KAC/B,IAKC,MAAAS,EAAa,CAAuB,EACpCC,EAAO,CAA0B,EACjCC,EAASF,EAAUE,MAAQF,EAAUE,OAAS,CAAW,EACzDC,EAAWH,EAAUG,QAAUnC,OAAOC,OAAO,CAAEmC,eAAe,EAAOC,OAAO,EAAOC,YAAY,GAAQN,EAAUG,SACjHI,EAAY,IAAIC,UAEhBC,EAAcT,EAAUU,UAAYV,EAAUU,WAAa,IAAIC,IAChEF,EAAWG,IAAI,cAClBH,EAAWI,IAAI,YAAa,CAAEC,SAAU,IAAIC,MAE9C,MAAMC,EAAuB,YAAanB,SAASoB,cAAc,YAI3DC,EAAU,OACVC,EAAkC,CACtC,IAAK,MACL,KAAM,OACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,SAAU,SACV,SAAU,SACV,KAAM,KACN,IAAK,IACL,IAAK,KAGDC,EAAU,+DAEVC,EAAoB,SAAUC,GAClC,GAAIA,EAAID,kBAAmB,OAAOC,EAAID,kBACtC,MAAME,EAAWD,EAAIE,WACrB,IAAK,IAAIC,EAAI,EAAGC,EAAOH,EAAS9C,OAAQgD,EAAIC,EAAMD,IAChD,GAAIF,EAASE,aAAcxC,QACzB,OAAOsC,EAASE,GAGpB,OAAO,IACT,EAWME,EAAoB,SAAUL,GAClC,OACEA,EAAIK,mBACJC,MAAMhD,UAAUiD,OAAO/C,KAAKwC,EAAIE,YAAY,SAAUM,GACpD,OAAOA,aAAiB7C,OACzB,IAAER,MAEP,EAEMsD,EAAY,SAAUC,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAKR,WAAW/C,OAAQwD,IAAK,CAC/C,MAAMH,EAAQE,EAAKR,WAAWS,GAET,IAAnBH,EAAMI,UACc,IAAnBJ,EAAMI,WAAmB,KAAKC,KAAKL,EAAMM,WAAa,KAEvDJ,EAAKvC,YAAYqC,GACjBG,KAC4B,IAAnBH,EAAMI,UAEfH,EAAUD,EAEb,CACH,EACMO,EAAkB,SAAUC,GAChC,GAAmB,iBAARA,IAAqBC,MAAMC,OAAOF,IAC3C,OAAOzC,SAAS4C,eAAeC,OAAOJ,IACjC,GAAmB,iBAARA,EAiBhB,OAAOzC,SAAS4C,eAAe,IAhB/B,IACE,MACM3C,EADMS,EAAUoC,gBAAgBL,EAAK,aAC1BxC,KACjB,GAA+B,IAA3BA,EAAK0B,WAAW/C,OAClB,OAAOqB,EAAK8C,WACP,CACL,MAAMC,EAAWhD,SAASiD,yBAC1B,KAAOhD,EAAK8C,YACVC,EAASE,YAAYjD,EAAK8C,YAE5B,OAAOC,CACR,CACF,CAAC,MAAOG,GACP,OAAOnD,SAAS4C,eAAeH,EAChC,CAIL,EAEAtC,EAAUiD,eAAiB,CACzBC,MAAO,CACLC,MAAO,CACLC,QAAS,8CACTC,KAAM,SAAUF,GACd,MAAMG,EAAOzD,SAASoB,cAAc,YACpCqC,EAAKC,UAAYJ,EACjB,MAAMK,GAAaF,EAAKG,SAAWH,GAAMI,cAAc,SACvD,IAAKF,IAAcA,EAAUG,GAAI,MAAO,GACxC,MAAMC,EAAe/D,SAASgE,eAAeL,EAAUG,IAGvD,OAFIC,GAAcA,EAAapE,YAAYC,YAAYmE,GACvD/D,SAASiE,KAAKf,YAAYS,GACnB,EACR,GAEHO,YAAa,CACXX,QAAS,oBACTC,KAAM,SAAUU,GACd,MAAO,EACR,GAEHC,YAAa,CACXZ,QAAS,mBACTC,KAAM,SAAUW,EAAqBC,GACnC,IACE,IAAIC,SAAS,SAAUF,EAAvB,CAAoCC,EACrC,CAAC,MAAOjB,GACP,GAAI7C,EAAQG,WAEV,MADA6D,QAAQC,MAAM,kCAAkCH,OAAYjB,EAAEqB,SAASrB,EAAEsB,WACnEtB,EAENmB,QAAQI,KAAK,kCAAkCN,OAAYjB,EAAEqB,SAASrB,EAAEsB,UAE3E,CACD,MAAO,EACR,GAEHE,YAAa,CACXpB,QAAS,mBACTC,KAAM,SAAUmB,GAEd,MAAQ,oCAAoCA,+HAC7C,GAEHC,OAAQ,CACNrB,QAAS,mBACTC,KAAM,SAAUoB,GAEd,MAAQ,+BAA+BA,mJACxC,GAEHC,aAAc,CACZtB,QAAS,mCACTC,KAAM,SAAUsB,GAGd,MAFe,8IACoBA,YAEpC,EACDC,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9FF,EAAUG,kBAAkB7F,SAAQ,SAAUuF,EAAmCO,GAC/E,IAAKP,EAAO,OACZ,MAAMQ,EAAkBH,EAAQtB,cAC9B,mBAAmBwB,OAEhBC,WACGA,EAAgCC,QAAQC,QAChDrH,OAAOsH,KAAKX,GAAOvF,SAAQ,SAAUmG,GACnCJ,EAAgBK,aAAaD,EAAK7C,OAAOiC,EAAMY,IACjD,IACF,GACD,GAEHE,aAAc,CACZrC,QAAS,2CACTC,KAAM,SAAUkC,GAGd,MAFe,sJACoBA,YAEpC,EACDX,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9FF,EAAUY,kBAAkBtG,SAAQ,SAAUmG,EAAaL,GACzD,MAAMC,EAAkBH,EAAQtB,cAC9B,2BAA2BwB,OAExBC,UAIGA,EAAgCC,QAAQO,eAChDZ,EAAUQ,GAAOJ,GAJXhF,EAAQE,OAAO8D,QAAQI,KAAK,yCAAyCW,iBAAuBH,EAAUd,SAK9G,GACD,GAEH2B,WAAY,CACVxC,QAAS,yCACTC,KAAM,SAAUkC,GAGd,MAFe,2GACjBA,uEAAyEA,uBAExE,EACDX,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9FF,EAAUe,gBAAgBzG,SAAQ,SAAU0G,EAAiCZ,GAC3E,MAAMC,EAAkBH,EAAQtB,cAC9B,yBAAyBwB,OAEtBC,UAIGA,EAAgCC,QAAQW,aAChDD,EAAKhH,KAAKqG,EAAiBA,IAJrBhF,EAAQE,OAAO8D,QAAQI,KAAK,uCAAuCW,iBAAuBH,EAAUd,SAK5G,GACD,GAEH+B,YAAa,CACX5C,QAAS,kCACTC,KAAM,SAAU2C,GACd,MAAMC,EAAwBD,EAAYE,MAAM,MAGhD,MAFe,oJAC8BD,EAAsB,mBAAmBA,EAAsB,cAE7G,EACDrB,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9FF,EAAUqB,iBAAiB/G,SAAQ,SAAU4G,EAAsEd,GACjH,MAAMC,EAAkBH,EAAQtB,cAC9B,kBAAkBwB,OAEpB,GAAKC,EAAL,QAIQA,EAAgCC,QAAQgB,OAChD,IACEJ,EAAYK,SAASvH,KACnBqG,EACAA,EACA,CACEN,KAAQA,EACRyB,QAAWnB,EACXoB,WAAcP,EAAYO,WAC1BxB,UAAaA,GAGlB,CAAC,MAAO/B,GAEP,GADAmB,QAAQC,MAAM,+CAA+Cc,iBAAuBH,EAAUd,UAAWjB,EAAGgD,EAAYK,UACpHlG,EAAQG,WAAY,MAAM0C,CAC/B,CAhBA,MAFK7C,EAAQE,OAAO8D,QAAQI,KAAK,wCAAwCW,iBAAuBH,EAAUd,SAmB7G,GACD,GAEHuC,MAAO,CACLpD,QAAS,mCACTC,KAAM,SAAUmD,GACd,MAAMC,EAAgBD,EAAMN,MAAM,OAClC,IAAIQ,EAAS,sGACb,MAAMC,EAAuB,GAC7B,IAAK,IAAIlF,EAAI,EAAGC,EAAO+E,EAAchI,OAAQgD,EAAIC,EAAMD,IAAK,CAC1D,MAAMmF,EAAkBH,EAAchF,GAAGyE,MAAM,MAC/CS,EAAWE,KACT,eAAeD,EAAgB,kCAAkCA,EAAgB,MAEpF,CAED,OADAF,GAAU,sCAAsCC,EAAWG,KAAK,qBACzDJ,CACR,EACD9B,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9F,MAAM+B,EAAOxH,KACPyH,EAAWD,EAAKC,SACjBA,GAELlC,EAAU6B,WAAWvH,SAAQ,SAAU6H,EAAoG/B,GACzI,MAAMC,EAAkBH,EAAQtB,cAC9B,mBAAmBwB,OAErB,GAAKC,EAAL,QAIQA,EAAgCC,QAAQ8B,QAChD,IAAK,IAAIzF,EAAI,EAAGC,EAAOuF,EAAcxI,OAAQgD,EAAIC,EAAMD,IAAK,CAC1D,MAAM0F,EAAWF,EAAcxF,GAC3B0F,EAASC,YACPxF,MAAMyF,QAAQF,EAASC,WACzBD,EAASC,UAAUhI,SAAQ,SAAU0G,GACnCkB,EACED,EAAMlC,EAAMC,EAAWC,EAAWC,EAASG,EAC3CW,EACAqB,EAEJ,IAEAH,EACED,EAAMlC,EAAMC,EAAWC,EAAWC,EAASG,EAC3CgC,EAASC,UACTD,GAIP,CArBA,MAFKhH,EAAQE,OAAO8D,QAAQI,KAAK,iCAAiCW,iBAAuBH,EAAUd,SAwBtG,GACD,EACDqD,QAAS,SAAUlJ,EAAiBmJ,GAClC,MAAMC,EAAc,IAAIC,MAAMF,EAAW,CACvCG,SAAS,EACTC,YAAY,IAEdvJ,EAAOwJ,cAAcJ,EACtB,EACDR,SAAU,SACRD,EACAlC,EACAC,EACAC,EACAC,EACAG,EACAiC,EACAS,GAEA,MAAMP,EAAUP,EAAKO,QACfQ,EAAezG,EAAkB2D,GACjC+C,EAC0B,GAA9BpG,EAAkBqD,GAAgB8C,EAAe,KAEnD,IAAKV,EACH,OAGF,MAAMY,EAAgN,CACpN7C,EACA,KACA,CACEN,KAAQA,EACR0B,WAAcsB,EAAUtB,WACxBD,QAAWnB,EACX8C,iBAAoBF,GAAkBD,GAAcI,cACpDnD,UAAaA,IAIjB,GAAyB,mBAAdqC,EAWT,YAVAjC,EAAgBgD,iBAAiB,SAAS,SAAU3B,GAClDA,EAAM4B,kBACNJ,EAAgB,GAAKxB,EACrB,IACEY,EAAUtI,QAAQkJ,EACnB,CAAC,MAAOhF,GAEP,GADAmB,QAAQC,MAAM,uCAAuCW,EAAUd,UAAWjB,EAAGoE,GACzEjH,EAAQG,WAAY,MAAM0C,CAC/B,CACH,IAIF,MAAMqF,EAAWjB,EACXkB,EAAcD,EAASC,YACzBA,IACFvD,EAAUuC,QAAUvC,EAAUuC,SAAW,CAAA,EACzCvC,EAAUuC,QAAQgB,GAAe,IAGnCtK,OAAOsH,KAAK+C,GAAUjJ,SAAQ,SAAUmJ,GACtC,GAAiB,QAAbA,EASoB,gBAAbA,EAGa,eAAbA,IAIXpD,EAAgBgD,iBAAiBI,GAAW,SAAU/B,GACpDA,EAAM4B,kBACNJ,EAAgB,GAAKxB,EACrB,IACE6B,EAASE,GAAWzJ,QAAQkJ,EAC7B,CAAC,MAAOhF,GAEP,GADAmB,QAAQC,MAAM,aAAamE,iCAAyCxD,EAAUd,UAAWjB,EAAGqF,EAASE,IACjGpI,EAAQG,WAAY,MAAM0C,CAC/B,CACH,IAEIsF,GAAehB,IACjBvC,EAAUuC,QAASgB,GAAaC,GAAa,WAC3CjB,EAAQnC,EAAiBoD,EAC3B,IApBAxD,EAAUsD,EAASE,IAAmCpD,MAVxD,CACE6C,EAAgB,GAAK7C,EACrB,IACEkD,EAASE,GAAWzJ,QAAQkJ,EAC7B,CAAC,MAAOhF,GAEP,GADAmB,QAAQC,MAAM,8CAA8CW,EAAUd,UAAWjB,EAAGqF,EAASE,IACzFpI,EAAQG,WAAY,MAAM0C,CAC/B,CAOF,CAkBH,GACD,GAEHsD,QAAS,CACPlD,QAAS,mBACTC,KAAM,SAAUjF,GACd,MAAMoK,EAAoBpK,EAAO8H,MAAM,MAMvC,MALe,gMAG+BsC,EAAkB,oBAAqBA,EAAkB,KAAM,kBAG9G,EACD5D,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAG9FF,EAAU2D,aAAarJ,SAAQ,SAAUkC,EAA0DoH,GACjG,MAAMC,EAAcrH,EAAIqH,YAClBC,EAActH,EAAIsH,YAClBC,EAAe7D,EAAQtB,cAC3B,qCAAqCgF,OAGvC,IAAKG,EAEH,YADI1I,EAAQE,OAAO8D,QAAQI,KAAK,kDAAkDmE,iBAAyB3D,EAAUd,WAGvH,IAAK4E,EAAarJ,WAEhB,YADIW,EAAQE,OAAO8D,QAAQI,KAAK,wCAAwCmE,iBAAyB3D,EAAUd,0BAI7G,MAAM6E,EAAS,WACb,GAAKD,GAAiBA,EAAarJ,WAKnC,IACE,GAAImJ,aAAuB/G,MAAO,CAChC,MAAMmH,EAAclJ,SAASiD,yBAC7B6F,EAAYvJ,SAAQ,SAAU0C,GAC5B,IAAKA,EAAO,OACZ,MAAMkH,EAAelH,EAAMwE,SAAWxE,EACtC,IAAImH,EAA4B,KAEhC,GAA4B,iBAAjBD,GAAqD,iBAAjBA,EAC7CC,EAAe5G,EAAgB2G,QAC1B,GAA4B,mBAAjBA,EAChBC,EAAe5G,EAAgB2G,SAC1B,MAAIA,aAAwBrJ,MAIjC,YADIQ,EAAQE,OAAO8D,QAAQI,KAAK,6CAA6CmE,eAAuB3D,EAAUd,UAAW+E,IAFzHC,EAAeD,CAIhB,CAED,GAAIlH,EAAMoH,eAAkB,IAAMpH,EAAMoH,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,wCAAyCpB,EAAK,CAChIiG,GAAcF,EAAYhG,YAAYkG,EAC5C,IAEAJ,EAAarJ,WAAW2J,aAAaJ,EAAaF,GAElDF,EAAYvJ,SAAQ,SAAU0C,GACxBA,GAASA,EAAMsH,eACjBC,YAAW,KACT,IAAMvH,EAAMsH,eAAkB,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,uCAAwCpB,EAAK,IACrG,EAEP,GAED,MAAM,GAA2B,iBAAhB2F,GAAmD,iBAAhBA,EACnDE,EAAarJ,WAAW2J,aACtB9G,EAAgBsG,GAChBE,QAEG,GAA2B,mBAAhBF,EAChBE,EAAarJ,WAAW2J,aACtB9G,EAAgBsG,KAChBE,QAEG,GAAIF,IAAgBA,EAAYrC,SAAWqC,aAAwBhJ,KAAM,CAC9E,MAAM2J,EAAaX,EACbK,EAAeM,EAAWhD,SAAWgD,EAE3C,GAAIA,EAAWJ,eAAkB,IAAMI,EAAWJ,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,2BAA4BpB,EAAK,CACjI6F,EAAarJ,WAAW2J,aAAaH,EAAcH,GAC/CS,EAAWF,eACbC,YAAW,KACT,IACMC,EAAWF,eAAeE,EAAWF,eAC1C,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,0BAA2BpB,EAAK,IAC3D,GAEDsG,EAAWrF,SACbqF,EAAWC,gBAAkBxE,EAGhC,MACK5E,EAAQE,OAAO8D,QAAQI,KAAK,2CAA2CmE,eAAuB3D,EAAUd,UAAW0E,GACvHE,EAAarJ,WAAWC,YAAYoJ,EAEvC,CAAC,MAAO7F,GAEP,GADAmB,QAAQC,MAAM,yCAAyCsE,eAAuB3D,EAAUd,UAAWjB,GAC/F7C,EAAQG,WAAY,MAAM0C,EAC9B,GAAI6F,GAAgBA,EAAarJ,WAC/B,IAAMqJ,EAAarJ,WAAWC,YAAYoJ,EAAgB,CAAC,MAAOW,GAA6B,CAElG,MA1EKrJ,EAAQE,OAAO8D,QAAQI,KAAK,sBAAsBmE,0CAAkD3D,EAAUd,YA6EtGwF,MAAfb,IAA4C,IAAhBA,EACzBE,IACAO,WAAWP,EAA+B,iBAAhBF,EAA2BA,EAAc,KAG1E,GAEHc,aAAc,CACZtG,QAAS,mBACTC,KAAM,SAAUqG,GAEd,MADe,0DAA0DA,cAE1E,EACD9E,SAAU,SAAUC,EAA2BC,EAAsBC,EAA2BC,GAC9F,MAAM8C,EAAezG,EAAkB2D,GACjC+C,EAC0B,GAA9BpG,EAAkBqD,GAAgB8C,EAAe,KACnDhD,EAAU6E,kBAAkBvK,SAAQ,SAAUwK,EAAmDC,GAC/F,IACED,EAAa9K,KAAKiJ,GAAkB/C,EAASH,EAC9C,CAAC,MAAO7B,GAEP,GADAmB,QAAQC,MAAM,+BAA+ByF,kBAAoB9E,EAAUd,UAAWjB,EAAG4G,GACrFzJ,EAAQG,WAAY,MAAM0C,CAC/B,CACH,GAED,GAEH8G,SAAU,CACR1G,QAAS,kBACTC,KAAOyG,GACE,OAASA,EAAW,aAIjCxE,KAAM,CACJyE,YAAa,OACbC,cAAe,SACfC,iBAAkB,YAClBC,YAAa,SAKjB,MAAMC,EAAa,WACjB,MAAMC,EAAoC,CACxC,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UAIDC,EAAsCrM,OAAOsM,YAAYtM,OAAOuM,QAAQH,GAAWI,KAAI,EAAEjF,EAAKpH,KAAW,CAACA,EAAOoH,MAEjHkF,EAAgB,SAAUD,GAC9B,MAAMpJ,EAAU,SAAUsJ,GACxB,OAAOF,EAAIE,EACb,EACMhE,EAAS,MAAM1I,OAAOsH,KAAKkF,GAAK1D,KAAK,KAAK6D,QAAQ,MAAO,WACzDC,EAAaC,OAAOnE,GACpBoE,EAAgBD,OAAOnE,EAAQ,KACrC,OAAO,SAAUqE,GAEf,OADAA,EAAmB,MAAVA,EAAiB,GAAK,GAAGA,IAC3BH,EAAWzI,KAAK4I,GACnBA,EAAOJ,QAAQG,EAAe1J,GAC9B2J,CACN,CACF,EAEA,MAAO,CACLtG,OAAQgG,EAAcL,GACtBY,SAAUP,EAAcJ,GAE3B,CAhCkB,GAiCnBnK,EAAMiK,WAAaA,EAEnB,MAAMc,EAAc,SAAUC,GAQ5B,MAAMC,EAAyB,GACzBC,EAA4C,GAC5CC,EAAyJ,CAAA,EACzJC,EAAuC,CAAA,EAc7C,OAZAtN,OAAOsH,KAAK4F,GAAe9L,SAAQ,SAAUmG,GAC3C,MAAMgG,EAAeL,EAAc3F,GAKnC,GAJIgG,GAAwC,iBAAjBA,GAA6BA,EAAanI,mBAAmByH,QAAuC,mBAAtBU,EAAalI,OACpH8H,EAAatE,MAAM0E,EAAanI,SAAWlC,GAASwF,QACpD0E,EAAUvE,KAAK0E,EAAalI,OAE1BkI,GAAwC,iBAAjBA,GAA8D,mBAA1BA,EAAa3G,SAAyB,CACnG,MAAM4G,EAAW,GAAGjG,SACpB8F,EAAYG,GAAYD,EAAa3G,SACrC0G,EAAcE,GAAY,EAC3B,CACH,IACO,CACLN,cAAeA,EACf9H,QAAS,IAAIyH,OAAOM,EAAarE,KAAK,KAAM,KAC5CzD,KAAM+H,EACNK,aAAczN,OAAOsH,KAAKgG,GAC1B1G,SAAUyG,EACVC,cAAeI,KAAKC,UAAUL,GAElC,EAEMM,EAAa,SAAUlB,GAC3B,OAAOvJ,EAAQuJ,IAAUvJ,EAAQuJ,EAAMC,QAAQ,SAAU,MAAQ,EACnE,EAEMkB,EAAiBZ,EAAYjL,EAAUiD,eAAeC,OAiDtD4I,EAAmB9L,EAAU+L,SAAW,SAC5C9H,EACA+H,EACAC,GAEA,IAAIhJ,EAAiBjD,EAAUiD,eAC3BiJ,EAAUL,EAEVI,IACFhJ,EAAiBjF,OAAOC,OAAO,CAAA,EAAI+B,EAAUiD,eAAgBgJ,GAC7DC,EAAUjB,EAAYhI,EAAeC,QAGvC,MAAMwD,EAAS,gBACJzC,oCACgBA,EAAOiC,MAAM,KAAKY,KAAK,iEA9D7B,SAAU7C,EAAgBkI,EAAcD,GACzD/L,EAAQC,eAAe+D,QAAQiI,KAAK,SAASnI,KAEjD,IAAIzF,EAAQ,EACRkI,EAAS,GAuCb,OArCAyF,EAAKxB,QAAQuB,EAAQ9I,SAAS,YAAa/E,GACzC,MAAMqM,EAAgBrM,EAAO,GACvBgO,EAAiBhO,EAAOA,EAAOI,OAAS,GAI9C,IAAI6N,EAFJ5F,GAAUyF,EAAKI,MAAM/N,EAAO6N,GAAQ1B,QAAQvJ,EAASwK,GAGrD,IAAIY,EAA4B,KAWhC,GATAnO,EAAOkO,MAAM,GAAI,GAAGE,MAAK,SAAUtO,EAAY0L,GAC7C,YAAcJ,IAAVtL,IACFmO,EAAuBnO,EACvBqO,EAAa3C,GACN,EAGX,SAE6BJ,IAAzB6C,GAAqD,OAAfE,EACxC,IACE9F,GAAUwF,EAAQ7I,KAAKmJ,GAAY1N,KAAKoN,EAAQhB,cAAeoB,EAAsBrI,EACtF,CAAC,MAAOjB,GAEP,GADAmB,QAAQC,MAAM,uCAAuCoI,gBAAyBF,mBAAsCrI,MAAYjB,GAC5H7C,EAAQG,WAAY,MAAM0C,EAC9B0D,GAAU,EACX,MAEDA,GAAUgE,EAAMC,QAAQvJ,EAASwK,GAInC,OADApN,EAAQ6N,EAAS3B,EAAMjM,OAChBiM,CACT,IAEAhE,GAAUyF,EAAKI,MAAM/N,GAAOmM,QAAQvJ,EAASwK,GAEzCzL,EAAQC,eAAe+D,QAAQuI,QAAQ,SAASzI,KAC7CyC,CACT,CAuBQiG,CAAe1I,EAAQ+H,EAAcE,oBAG3C,IAAIU,EAAiC,KAErC,IACEA,EAAgB,IAAI1I,SAClBjB,EAAeqC,KAAKyE,YACpB9G,EAAeqC,KAAK0E,cACpB/G,EAAeqC,KAAK2E,iBACpBhH,EAAeqC,KAAK4E,YACpB,YACA,OACA,cACA,aACAxD,EAEH,CAAC,MAAO1D,GACP,GAAI7C,EAAQG,WAAY,CACtB6D,QAAQC,MAAM,kCAAkCH,OAAYjB,EAAEqB,SAASrB,EAAEsB,WACzE,IACE,IAAIJ,SACFjB,EAAeqC,KAAKyE,YAAuB9G,EAAeqC,KAAK0E,cAAyB/G,EAAeqC,KAAK2E,iBAC5GhH,EAAeqC,KAAK4E,YAAuB,YAAa,OAAQ,cAAe,aAAcxD,EAEhG,CAAC,MAAmC,CACrC,MAAM1D,CACP,CACC,MAAQ,KAAA,CAA4B,EAEvC,CAED,MAAM6J,EAAmC,YAA2CxO,GAClF,IAAIwG,EACAiI,EACAC,EACAC,EAGJ,MAAMC,EAAW5O,EAAO,GACpB4O,GAAgC,iBAAbA,IAA0BA,EAASC,iBAAmBD,EAASE,WAAaF,EAASG,iBAC1GvI,EAAO,IAAKoI,GACZH,EAAiBjI,EAAKqI,uBAAwBrI,EAAKqI,gBACnDH,EAAWlI,EAAKsI,iBAAkBtI,EAAKsI,UACvCH,EAAgBnI,EAAKuI,sBAAuBvI,EAAKuI,iBAEjDvI,EAAOoI,EACkB,mBAAd5O,EAAO,IAChByO,OAAiBrD,EACjBsD,EAAW1O,EAAO,GAClB2O,EAAgB3O,EAAO,KAEvByO,EAAiBzO,EAAO,GACxB0O,EAAW1O,EAAO,GAClB2O,EAAgB3O,EAAO,KAK3B,MAAM0L,EAAc9G,EAAeqC,KAAKyE,YAClCC,EAAgB/G,EAAeqC,KAAK0E,cACpClF,EAAuB4G,KAAK2B,MAAMnB,EAAQZ,eAE1CvG,EAA4B/G,OAAOC,OAAO+O,GAAiB,CAAA,EAAI,CACnE/I,OAAQA,EACRqC,QAAS,KACTgH,OAASN,GAAiBA,EAAcM,QAAW,CAAE,EACrD3C,QAAS,SAAU4C,GACjB,MAAMxG,EAAOxH,KACRwH,EAAKT,SAAaS,EAAKT,mBAAmB3G,MAAUoH,EAAKT,QAAQ4B,cAItEnB,EAAKT,QAAQ4B,cAAciB,aACxBoE,EAAgCjH,SAAWiH,EAC5CxG,EAAKT,SALDnG,EAAQE,OAAO8D,QAAQI,KAAK,4BAA4BN,0BAO/D,EACDuJ,OAAQ,SAAUC,GAAkB,GAClC,MAAM1G,EAAOxH,KACb,GAAIwH,EAAK2G,aAAgB,IAAM3G,EAAK2G,cAAiB,CAAC,MAAO1K,GAAKmB,QAAQC,MAAM,yBAA0BpB,EAAK,CAE/G,MAAM2K,EAAU5G,EAAKT,mBAAmB3G,KAAQoH,EAAKT,QAAQ4B,cAAgB,KAC7E,IAAI0F,EAAyE7G,EAAKT,QAElF,GAAIqH,EACF,GAAIF,EAAQ,CACV,MAAMnK,EAAOzD,SAASoB,cAAc,YACpC0M,EAAOxE,aAAa7F,EAAMyD,EAAKT,SAC/BS,EAAKT,QAAUhD,CAChB,MACCqK,EAAOlO,YAAYsH,EAAKT,cAEjBnG,EAAQE,OACjB8D,QAAQI,KAAK,2BAA2BN,2BAG1C,GAAI8C,EAAK8G,YAAe,IAAM9G,EAAK8G,aAAgB,CAAC,MAAO7K,GAAKmB,QAAQC,MAAM,wBAAyBpB,EAAK,CAC5G,OAAO4K,CACR,EACDE,SAAU,SAAU5F,GAClB,MAAMnB,EAAOxH,KACb,GAAIwH,EAAKmC,eAAkB,IAAMnC,EAAKmC,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,2BAA4BpB,EAAK,CAWrH,OATIkF,GAAiBnB,EAAKT,mBAAmB3G,KAC3CuI,EAAcnF,YAAYgE,EAAKT,SACtBnG,EAAQE,OACjB8D,QAAQI,KAAK,2BAA2BN,gEAGtC8C,EAAKqC,eACPC,YAAW,KAAQ,IAAMtC,EAAKqC,eAAmB,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,0BAA2BpB,EAAI,IAAK,GAE3G+D,CACR,EACDgH,QAAS,WAAgD,EACzDC,OAAQ,SAAUC,GAA2E,OAAO1O,IAAO,EAC3G2O,QAAS,SAAUC,GAA+E,OAAO5O,IAAO,EAChH6O,QAAS,SAAUD,GAA+E,OAAO5O,IAAO,IAG7GwF,EAAUsJ,MACbtJ,EAAUsJ,IAAMnO,EAAMoO,MAAMrK,IAE9Bc,EAAUgF,GAAelF,EACO4E,MAA5B1E,EAAUiF,KACZjF,EAAUiF,GAAiB,IAG7B,MAAMuE,EAAYzB,aAA0B7N,QACtCuP,EAAO3O,SAASoB,cAAc,YACpC,IAAIwN,EAA4B,KAE5BtO,EAAQC,eAAe+D,QAAQiI,KAAK,WAAWnI,KAEnD,IAAIyK,EAA8B,KAClC,IACEA,EAAgB7J,EAEZ+H,EAAe9N,KACfgO,GAAkB,KAClBjI,EACAE,EAAUiF,GACVjF,EACA/E,EAAU2O,KAAK1K,GACfjE,EACAC,EACA6E,EACA3E,EAAQE,OAVR,qCAAqC4D,gBAY1C,CAAC,MAAOjB,GACP,GAAI7C,EAAQG,WAAY,CACtB6D,QAAQC,MAAM,mCAAmCH,MAAYjB,EAAEsB,SAC/DH,QAAQyK,IAAI,eAAgB/J,EAAM,gBAClC,IACE+H,EAAe9N,KAAKgO,GAAkB,KAAMjI,EAAME,EAAUiF,GAAgBjF,EAAW/E,EAAU2O,KAAK1K,GAASa,GAAW,EAC3H,CAAC,MAAsB,CACxB,MAAM9B,CACP,CAGC,OAFAmB,QAAQI,KAAK,sBAAsBN,0CACnCc,EAAUuB,QAAUzG,SAASgP,cAAc,iBAAiB5K,KACrDc,CAEV,CACG5E,EAAQC,eAAe+D,QAAQuI,QAAQ,WAAWzI,KAEtDuK,EAAKjL,UAAYmL,EACjB,IAAI3F,EAA4DyF,EAAK/K,SAAW+K,EAEhF,GAAoC,YAA/BzF,EAAoB+F,UAA2BN,EAAa/K,QAAS,CACxE,MAAMlC,EAAWK,MAAMmN,KAAKhG,EAAYvH,YACxCuH,EAAclJ,SAASiD,yBACvBvB,EAASnC,SAAQ0C,GAASiH,EAAYhG,YAAYjB,IACnD,CAED,MAAM8C,EAAWsH,EAAQtH,SAiBzB,GAhBIC,GACFqH,EAAQT,aAAarM,SAAQ,SAAUmG,GAErC,GAAIT,EAAUS,IAAQT,EAAUS,GAAK9G,OAAS,EAC5C,IACEmG,EAASW,GAAKzG,KAAKmE,EAAeC,MAAMqC,EAAIgH,MAAM,GAAI,IAAK1H,EAAMC,EAAWC,EAAWgE,EACxF,CAAC,MAAO/F,GACP,GAAI7C,EAAQG,WAEV,MADA6D,QAAQC,MAAM,mCAAmCmB,oBAAsBtB,MAAYjB,GAC7EA,CAET,CAEL,IAGEuL,GAAazB,EAAgB,CAC/B,KAAOA,EAAelK,YACpBkK,EAAerN,YAAYqN,EAAelK,YAE5CmC,EAAU+H,eAAiBA,CAC5B,CAID,IADqB/D,EAAoBrF,cAAiBqF,EAAoBrF,cAAc,SAAW,OACnFqF,EAAoBrF,cAAe,CACrD,MAAMsL,EAAOnP,SAASoB,cAAcgD,GACpC,IACE,MAAMgL,EAASD,EAAKE,aAAa,CAAEC,KAAM,SACzC,KAAOpG,EAAYnG,YACjBqM,EAAOlM,YAAYgG,EAAYnG,YAEjCmG,EAAciG,CACf,CAAC,MAAOhM,GACPmB,QAAQC,MAAM,6CAA6CH,MAAYjB,EAExE,CACF,CAGD,GAAI+F,EAAYnG,YAAiD,GAAnCmG,EAAYnG,WAAWV,SACnDuM,EAAe1F,EAAYnG,gBACtB,GAAsC,GAAlCjB,EAAkBoH,IAE3B,GADA0F,EAAepN,EAAkB0H,GAC7BwF,GAAazB,GAAkB2B,EAAc,CAC/C,GAAI1J,EAAUmE,eAAkB,IAAMnE,EAAUmE,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,2BAA4BpB,EAAK,CAC/H8J,EAAe/J,YAAY0L,GACvB1J,EAAUqE,eAAiBC,YAAW,KAAQ,IAAMtE,EAAUqE,eAAmB,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,0BAA2BpB,EAAI,IAAK,EACrJ,OAED,GAAIuL,GAAazB,EAAgB,CAC/B,GAAI/H,EAAUmE,eAAkB,IAAMnE,EAAUmE,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,2BAA4BpB,EAAK,CAC/H8J,EAAe/J,YAAYgG,GACvBhE,EAAUqE,eAAiBC,YAAW,KAAQ,IAAMtE,EAAUqE,eAAmB,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,0BAA2BpB,EAAI,IAAK,GACpJyL,EAAe3B,CAChB,MACC2B,EAAe1F,EAInB,GAAIlE,GAAQA,EAAKuK,QAAUX,aAAwBxP,QACjD,IAAK,MAAMoQ,KAAQxK,EAAKuK,OACtB,IACE,MAAMjR,EAAQ0G,EAAKuK,OAAOC,GAC1B,GAAIA,EAAKC,WAAW,SAAU,CAC5B,MAAMC,EAAaF,EAAKG,UAAU,GAAG7E,QAAQ,aAAc8E,GAAMA,EAAE,GAAGC,gBACrEjB,EAA6BrJ,QAAQmK,GAAc7M,OAAOvE,EAC5D,MAAUkR,KAAQZ,EAChBA,EAAqBY,GAAQlR,EAE9BsQ,EAAajJ,aAAa6J,EAAM3M,OAAOvE,GAE1C,CAAC,MAAO6E,GACPmB,QAAQC,MAAM,wBAAwBiL,8BAAiCpL,MAAYjB,EACpF,CAYL,GARIyL,aAAwB9O,MAAQ8O,EAAakB,WAC/ClB,EAAakB,YAEXlB,aAAwB9O,MAC1BoC,EAAU0M,GAEZ1J,EAAUuB,QAAUmI,EAEhBvO,EAAM0P,kBACR,IAAM1P,EAAM0P,kBAAkB7K,EAAa,CAAC,MAAO/B,GAAKmB,QAAQC,MAAM,8BAA+BpB,EAAK,CAG5G,GAAI+J,EACF,IACEA,EAASjO,KAAKgO,GAAkB,KAAM/H,EACvC,CAAC,MAAO/B,GAEP,GADAmB,QAAQC,MAAM,mCAAmCH,MAAYjB,GACzD7C,EAAQG,WAAY,MAAM0C,CAC/B,CAuEH,OAnEA+B,EAAUgJ,QAAU,WAClB,MAAMhH,EAAOxH,KACPoF,EAAQ3G,OAAO6R,oBAAoB9I,GACnC+I,EAAY,CAAC9F,EAAe,OAClC,IAAK,IAAIvI,EAAI,EAAGA,EAAIkD,EAAMlG,OAAQgD,IAAK,CACrC,MAAM4N,EAAO1K,EAAMlD,GACgB,mBAAvBsF,EAAasI,IAAyBS,EAAUC,SAASV,WAC3DtI,EAAasI,EAExB,CACH,EAEAtK,EAAUiJ,OAAS,SAAUC,GAC3B,MAAM+B,EAAmBzQ,KACnB0Q,EAAgBD,EAAiB1J,QACjCqH,EAAUsC,aAAyBtQ,KAAQsQ,EAAc/H,cAAgB,KACzElD,EAAUgL,EAAiBlD,eAC3BoD,EAAWlQ,EAAUC,KAAK+P,EAAiB/L,QAEjD,IAAKiM,EAEH,OADA/L,QAAQC,MAAM,4CAA4C4L,EAAiB/L,sBACpE+L,EAGT,MAAMG,EAAQ,CACZjH,eAAgB8G,EAAiB9G,eAAgBE,cAAe4G,EAAiB5G,cACjFsE,aAAcsC,EAAiBtC,aAAcG,YAAamC,EAAiBnC,YAC3EuC,cAAeJ,EAAiBI,cAAeC,aAAcL,EAAiBK,cAGhF,GAAIL,EAAiBtC,aAAgB,IAAMsC,EAAiBtC,cAAiB,CAAC,MAAO1K,GAAKmB,QAAQC,MAAM,uCAAwCpB,EAAK,CAErJ,IAAIuK,EACJ,GAAIvI,EACFuI,EAAe2C,EAASjC,EAASjJ,OAASyE,EAAWuG,QAChD,GAAIrC,GAAUsC,aAAyBtQ,KAE5C,GADA4N,EAAe2C,EAASjC,OAASxE,OAAWA,EAAWuG,GACnDzC,EAAajH,mBAAmB3G,KAAM,CACxC,GAAI4N,EAAarE,eAAkB,IAAMqE,EAAarE,gBAAmB,CAAC,MAAOlG,GAAKmB,QAAQC,MAAM,yCAA0CpB,EAAK,CACnJ2K,EAAOxE,aAAaoE,EAAajH,QAAS2J,GACtC1C,EAAanE,eAAiBC,YAAW,KAAQ,IAAMkE,EAAanE,eAAmB,CAAC,MAAOpG,GAAKmB,QAAQC,MAAM,wCAAyCpB,EAAI,IAAK,EACzK,MAAU7C,EAAQE,OACjB8D,QAAQI,KAAK,iBAAiByL,EAAiB/L,8DAIjDsJ,EAAe2C,EAASjC,OAASxE,OAAWA,EAAWuG,GAGzD,GAAIA,EAAiBnC,YAAe,IAAMmC,EAAiBnC,aAAgB,CAAC,MAAO7K,GAAKmB,QAAQC,MAAM,sCAAuCpB,EAAK,CAGlJ,OADAhF,OAAOC,OAAOsP,EAAc4C,GACrB5C,CACT,EAEAxI,EAAUmJ,QAAU,SAAUC,GAC5B,MAAM6B,EAAmBzQ,KACnB+Q,EAAcN,EAAiBjG,GACrC,GAAIiG,EAAiBI,cAAiB,IAAMJ,EAAiBI,eAAkB,CAAC,MAAOpN,GAAKmB,QAAQC,MAAM,0BAA2BpB,EAAK,CAC1I,MAAMiL,EAAUjQ,OAAOC,OAAO,CAAE,EAAEqS,GAAe,CAAA,EAAInC,GAC/CZ,EAAeyC,EAAiBhC,OAAOC,GAC7C,GAAI+B,EAAiBK,aAAgB,IAAML,EAAiBK,cAAiB,CAAC,MAAOrN,GAAKmB,QAAQC,MAAM,yBAA0BpB,EAAK,CACvI,OAAOuK,CACT,EAEAxI,EAAUqJ,QAAUrJ,EAAUmJ,QAEvBnJ,GAKT,GAFA/G,OAAOE,eAAe2O,EAAe,OAAQ,CAAE1O,MAAO,UAAU8F,IAAUlF,UAAU,IAEhFkF,EAAQ,CACV,MAAMsM,EAAyBpQ,EAAQE,MAAQ,CAC7CwM,cAAeA,EACfnG,OAAQyD,EAAW1F,OAAO,YAAYR,aAAkBhB,EAAeqC,KAAKyE,gBAAgB9G,EAAeqC,KAAK0E,kBAAkB/G,EAAeqC,KAAK2E,qBAAqBhH,EAAeqC,KAAK4E,4CAA4CxD,QAC3OsF,aAAc7B,EAAW1F,OAAOuH,IAC9B,CACFa,cAAeA,GAEjBpM,EAAWI,IAAIoD,EAAQsM,GAEvB,MAAMC,EAAcvM,EAAOiC,MAAM,KACjC,GAAIsK,EAAY/R,OAAS,EAAG,CAC1B,MAAMgS,EAAQD,EAAY,GAC1B,IAAIE,EAAWzQ,EAAKwQ,GACfC,IACHzQ,EAAKwQ,GAASC,EAAW,IAM3BA,EAJkBF,EACfjE,MAAM,GACN/B,KAAI,CAACmG,EAAMnS,IAAoB,IAAVA,EAAcmS,EAAOA,EAAKC,OAAO,GAAGlB,cAAgBiB,EAAKpE,MAAM,KACpFzF,KAAK,KACcyJ,EAAS1D,aAChC,CACF,CACD,OAAOA,CACT,EAEA7M,EAAU6Q,UAAY,SAAUC,GAC9B9S,OAAOsH,KAAKwL,GAAM1R,SAAQ,SAAU2R,GAClC,MAAMC,EAASF,EAAKC,GACdE,EAAOxQ,EAAWb,IAAImR,GACxBE,GACFxQ,EAAWI,IAAImQ,EAAQC,GACnB9Q,EAAQE,OAAO8D,QAAQyK,IAAI,sBAAsBmC,UAAeC,OAC3D7Q,EAAQE,OACjB8D,QAAQI,KAAK,mCAAmCwM,yBAEpD,GACF,EAEA/Q,EAAUC,KAAO,SAAUgE,GACzB,MAAMsM,EAAW9P,EAAWb,IAAIqE,GAChC,OAAOsM,EAAWA,EAAS1D,cAAgB,IAC7C,EAEA,MAAMqE,EAAe,SAAUxK,GAC7B,IAAIqF,EACJ,GAAIrF,aAAkBzH,QACpB,OAAIyH,EAAOoI,QAA+BpI,EAQ5C,GAN6B,iBAAXA,IACZvG,EAAQE,OAAO8D,QAAQI,KAAK,uDAAwDmC,GACxFA,EAAS,IAGXqF,EAAWlM,SAASoB,cAAc,YAC9BD,EAAsB,CACxB,MAAMmQ,EAAgBzK,EAAOiE,QAC3B,2HACA,QAEFoB,EAASxI,UAAY4N,CACtB,KAAM,CACL,MAAMA,EAAgBzK,EACnBiE,QACC,2HACA,QAEDA,QAAQ,aAAc,2BACtBA,QAAQ,gBAAiB,cAC5BoB,EAASxI,UAAY4N,CACtB,CACD,OAAOpF,CACT,EAEMqF,EAAWpR,EAAUoR,QAAU,SAAUnN,EAAgBqC,EAA2BrD,GACxF,IAAI+I,EAAe1F,aAAmBrH,QAAUqH,EAAQ/C,UAAYb,OAAO4D,GAE3E,OADA0F,EAAe7B,EAAWa,SAASgB,EAAarB,QAAQ,eAAgB,KACjEmB,EAAgB7H,EAAQ+H,EAAc/I,EAC/C,EAEMoO,EAAYrR,EAAUqR,SAAW,SACrC3K,EACA4K,EACArO,GAEmC,kBAAxBqO,GAAuD7H,MAAlBxG,GAC9CA,EAAiBqO,EACjBA,GAAsB,GAEtBA,IAAwBA,EAG1B,MAAMC,EAAYL,EAAaxK,GAoB/B,OAnBiB6K,EAA8B9N,SAAW8N,GAChCC,iBACxB,qFAGQpS,SAAQ4C,IAChB,MAAMiC,EAASjC,EAAK2B,GACfM,SAE8CwF,IAA9CzH,EAAqBoD,QAAQqM,aAChCL,EAAQnN,EAAQjC,EAAMiB,EAAtBmO,CAAsC,CAAE,GAExCA,EAAQnN,EAAQjC,EAAMiB,GAGpBqO,GAAuBtP,EAAKxC,YAC9BwC,EAAKxC,WAAWC,YAAYuC,GAC7B,IAEIuP,CACT,EAEsBvR,EAAU0R,aAAe,SAC7CC,EACAC,EACA7E,GAEKA,GAA8B,mBAAX6E,IACtB7E,EAAW6E,EACXA,EAAS,CAAA,GAGX,MAAMC,EAAiB,CACrBC,YAAY,EAAMC,WAAW,EAAMC,UAAU,EAAM/O,oBAAgBwG,GAE/DwI,EAAgBjU,OAAOC,OAAO,CAAA,EAAI4T,EAAgBD,GAalDM,EAAkBpR,IACtBA,EAAS1B,SAAQkH,IACf,GAAKA,EAAL,CACA,GAAIA,EAAQ3C,GAAI,CACd,MAAMwO,EAAatS,SAASgE,eAAeyC,EAAQ3C,IAC/CwO,GAAYA,EAAW3S,YAAYC,YAAY0S,EACpD,CACuB,WAApB7L,EAAQwI,SAA4C,SAApBxI,EAAQwI,SAA0C,UAApBxI,EAAQwI,QACxEjP,SAASiE,KAAKf,YAAYuD,GAE1BzG,SAASC,KAAKiD,YAAYuD,EARP,CASpB,GACD,EAuCE8L,EAAgBC,GACb,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EA/DW,iBADKC,EAgEcL,GA9D7B,CAAEM,IAAKD,EAAKd,OAAQK,GAClBS,GAAsB,iBAARA,GAAoBA,EAAIC,IACxC,CAAEA,IAAKD,EAAIC,IAAKf,OAAQ5T,OAAOC,OAAO,CAAE,EAAEgU,EAAeS,EAAId,UAEpEzN,QAAQC,MAAM,8CAA+CsO,GACtD,MAPc,IAACA,EAiEtB,IAAKD,EAEH,YADAF,IAGF,MAAMK,EAAMH,EAAWE,IACjBE,EAAgBJ,EAAWb,OAEjC,GAAIgB,EAAIE,SAAS,OAAQ,CACvB,MAAMC,EAASC,EAAW,SAAU,CAAEC,OAAO,EAAML,IAAKA,IAExDG,EAAOG,QAAU,KAAQ/O,QAAQC,MAAM,0BAA0BwO,IAAM,EACvE/S,SAASiE,KAAKf,YAAYgQ,GAC1BR,GACD,MAAM,GAAIK,EAAIE,SAAS,QAAS,CAC/B,MAAMK,EAAOH,EAAW,OAAQ,CAAEI,KAAM,WAAYC,IAAK,aAAcC,KAAMV,IAE7EO,EAAKD,QAAU,KAAQ/O,QAAQC,MAAM,8BAA8BwO,IAAM,EACzE/S,SAASiE,KAAKf,YAAYoQ,GAC1BZ,GAGD,MACCgB,EAAYX,EAAK,MAAM,CAAClM,EAAQ4G,KAC9B,GAAe,MAAXA,GAA6B,IAAXA,EACpB,IA/DS,EAAC5G,EAAgBmM,KAClC,MAAMW,EAAoBtC,EAAaxK,GACvC2K,EAASmC,GAAmB,EAAOX,EAAcY,cACjD,MAAMhQ,EAAW+P,EAAsC/P,SAAW+P,EAElE,GAAIX,EAAcb,SAAU,CAC1B,MAAM0B,EAAQjQ,EAAQ+N,iBAAkC,0BACxDU,EAAewB,EAChB,CACD,GAAIb,EAAcd,UAAW,CAC3B,MAAM4B,EAASlQ,EAAQ+N,iBAAmC,aAC1DU,EAAeyB,EAChB,CACD,GAAId,EAAcf,WAAY,CAC5B,MAAM8B,EAAUnQ,EAAQ+N,iBACtB,6EAEIqC,EAAoBjS,MAAMmN,KAAK6E,GAClC/R,QAAOG,IACN,IAAI2L,EAAS3L,EAAKxC,WAClB,KAAOmO,GAAQ,CACb,GAAwB,aAApBA,EAAOmG,UAAgD,WAApBnG,EAAOmG,UAA0BnG,EAA6ByF,KAAKrD,SAAS,YAAc,OAAO,EACxIpC,EAASA,EAAOnO,UACjB,CACD,OAAO,CAAI,IAEZgL,KAAIxI,IACH,MAAM+R,EAAYlU,SAASoB,cAAc,UAGzC,OAFAe,EAAKgS,oBAAoB5U,SAAQiF,GAAQ0P,EAAUvO,aAAanB,EAAMrC,EAAKiS,aAAa5P,MACpFrC,EAAKuB,YAAWwQ,EAAUG,YAAclS,EAAKuB,WAC1CwQ,CAAS,IAEpB7B,EAAe2B,EAChB,GA+BSM,CAAWzN,EAASmM,EACrB,CAAC,MAAO7P,GACPmB,QAAQC,MAAM,uCAAuCwO,KAAQ5P,EAC9D,MAEDmB,QAAQC,MAAM,kCAAkCwO,cAAgBtF,MAElEiF,GAAS,GAEZ,IAIC6B,EAAgBrH,SAAsB,GAE5C,GAAInL,MAAMyF,QAAQsK,GAAa,CAC7B,GAA0B,IAAtBA,EAAWlT,OAEb,YADA2V,IAGF9B,QAAQ+B,IAAI1C,EAAWnH,IAAI4H,IAAekC,KAAKF,GAAoEG,OAAMC,IACvHrQ,QAAQC,MAAM,2CAA4CoQ,GAC1DJ,GAAe,GAElB,MACChC,EAAaT,GAAY2C,KAAKF,GAAkEG,OAAMC,IACpGrQ,QAAQC,MAAM,0CAA2CoQ,GACzDJ,GAAe,GAGrB,EAEA,MAAMb,EAAc,SAAUZ,EAAaf,EAA4B7E,GACrE,MAAM0H,EAAU,IAAIC,eAEpBD,EAAQE,mBAAqB,WACvBF,EAAQG,YAAcF,eAAeG,OACjB,KAAlBJ,EAAQnH,QAAoC,IAAnBmH,EAAQnH,OACnCP,EAAS0H,EAAQK,aAAcL,EAAQnH,OAAQmH,IAEzB,KAAlBA,EAAQnH,OAAenJ,QAAQC,MAAM,0BAA0BuO,KAC1D8B,EAAQnH,QAAU,IAAKnJ,QAAQC,MAAM,cAAcqQ,EAAQnH,cAAcqF,KAC7ExO,QAAQC,MAAM,sBAAsBuO,IAAO8B,EAAQM,YACxDhI,EAAS,KAAM0H,EAAQnH,OAAQmH,IAGrC,EAEAA,EAAQvB,QAAU,WAChB/O,QAAQC,MAAM,4BAA4BuO,KAC1C5F,EAAS,KAAM,EAAG0H,EACpB,EACAA,EAAQO,UAAY,WAClB7Q,QAAQC,MAAM,yBAAyBuO,KACvC5F,EAAS,KAAM,IAAK0H,EACtB,EAEA,IACE,MAAMQ,EAAUrD,GAAWA,EAAeqD,QAAW,MACrDR,EAAQS,KAAKD,EAAQtC,GAAK,GAEtBf,GACGA,EAAeuD,UAASV,EAAQU,QAAWvD,EAAeuD,SAC3DvD,EAAOwD,SACTpX,OAAOuM,QAAQqH,EAAOwD,SAAShW,SAAQ,EAAEmG,EAAKpH,MAC5CsW,EAAQY,iBAAiB9P,EAAKpH,EAAM,IAGxCsW,EAAQa,KAAK1D,EAAO9R,MAAe,OAEnC2U,EAAQa,MAEX,CAAC,MAAOtS,GACPmB,QAAQC,MAAM,4BAA4BuO,KAAQ3P,GAClD+J,EAAS,KAAM,EAAG0H,EACnB,CACH,EAEAzU,EAAU2O,KAAO,CAAA,EAEjB3O,EAAUuV,QAAU,SAAUC,EAAiBC,GAC7C,IAAKD,GAA8B,iBAAZA,IAAyBC,GAA8B,iBAAZA,EAEhE,YADAtR,QAAQC,MAAM,iCAAkCoR,EAASC,GAI3D,MAAMC,EAAeF,EAAQtP,MAAM,KACnC,IAAI9H,EAAc4B,EAAU2O,KAC5B,MAAMgH,EAAYD,EAAajX,OAAS,EAExCiX,EAAatW,SAAQ,SAAUmG,EAAa9D,GACrC8D,IAEDoQ,IAAclU,GACXrD,EAAOmH,KACVnH,EAAOmH,GAAO,SAAUqQ,GACtB,MAAMC,EAAOhW,SAASiW,gBAAgBD,MAAQ,KAC9C,IAAIE,EAAQN,EAAQI,GAKpB,OAJIE,UACFA,EAAQH,EACJzV,EAAQE,OAAO8D,QAAQI,KAAK,qBAAqBiR,iBAAuBK,kCAAqCD,OAE5GG,QAAwCrT,OAAOqT,GAAS,EACjE,GAGF/X,OAAOsH,KAAKmQ,GACT5T,QAAQgU,GAASJ,EAAQI,aAAiB7X,SAAW4D,MAAMyF,QAAQoO,EAAQI,MAC3EzW,SAAS4W,IACRhW,EAAUuV,QAAQC,EAAU,IAAMQ,EAAQP,EAAQO,GAAQ,MAIzD5X,EAAOmH,KACVnH,EAAOmH,GAAO,IAEhBnH,EAASA,EAAOmH,IAEpB,GACF,EAEAvF,EAAUiW,SAAW,SAAUC,GAC7BlY,OAAOsH,KAAK4Q,GAAY,CAAE,GAAE9W,SAAQ,SAAUmG,GAC5CvF,EAAUuV,QAAQhQ,EAAK2Q,EAAS3Q,GAClC,GACF,EAEA,IAAI4Q,EAAe,EACnBjW,EAAMoO,MAAQ,SAAUrK,GAEtB,OADAkS,IACOlS,EAASkS,CAClB,EAEA,MAAMnD,EAAc9S,EAAM8S,WAAa,SACrClE,EACAsH,EAAiE,CAAA,KAC9D7U,GAEH,MAAM+E,EAAUzG,SAASoB,cAAc6N,GACvC,IAAIuH,EAAmC,CAAA,EA2CvC,MAzCqB,iBAAVD,GAEAA,aAAiBzW,KAD1B4B,EAAS+U,QAAQF,GAGRxU,MAAMyF,QAAQ+O,GACvB7U,EAAW6U,EAAMG,OAAOhV,GAExB8U,EAAcD,EAIhBpY,OAAOsH,KAAK+Q,GAAajX,SAAQ,SAAUmG,GACzC,MAAMpH,EAAQkY,EAAY9Q,GACpBiR,EAAmB,UAARjR,EAAkB,YAAcA,EAEjD,IACc,UAARA,GAAoC,iBAAVpH,GAAgC,OAAVA,EAClDH,OAAOC,OAAOqI,EAAQnD,MAAOhF,GACZ,YAARoH,GAAsC,iBAAVpH,GAAgC,OAAVA,EAC3DH,OAAOC,OAAQqI,EAAwBlB,QAASjH,GACvCoH,EAAI+J,WAAW,OAA0B,mBAAVnR,EAEvCmI,EAAgBf,EAAIkR,eAAiBtY,EAC7BqY,KAAYlQ,EACpBA,EAAgBkQ,GAAYrY,EAE7BmI,EAAQd,aAAaD,EAAK7C,OAAOvE,GAEpC,CAAC,MAAO6E,GACPmB,QAAQC,MAAM,qCAAqCmB,UAAYuJ,MAAa9L,EAC7E,CACH,IAGAzB,EAASnC,SAAQ0C,IACM,iBAAVA,EACTwE,EAAQvD,YAAYlD,SAAS4C,eAAeX,IACnCA,aAAiBnC,MAC1B2G,EAAQvD,YAAYjB,EACrB,IAEIwE,CACT,EAEApG,EAAMyE,MAAQ,YAAa+R,GACzB,IAAKA,GAAwC,IAAxBA,EAAajY,OAAc,MAAO,GACvD,MAAMkY,EAAc3Y,OAAOC,OAAO,CAAA,KAAOyY,GACnCE,EAAyB,GAQ/B,OAPA5Y,OAAOsH,KAAKqR,GAAavX,SAAQ,SAAUmG,GACzC,MAAMpH,EAAQwY,EAAYpR,GAC1B,GAAIpH,GAAmB,IAAVA,EAAa,CACxB,MAAM0Y,EAAenU,OAAOvE,GAAOwM,QAAQ,KAAM,UACjDiM,EAAa/P,KAAK,GAAGtB,MAAQsR,KAC9B,CACH,IACOD,EAAa9P,KAAK,IAC3B,EAGAsK,EAAQ,SAAU,qDAClBA,EACE,aACA"}